get my status<hr>

admin
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>$command</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Например get my nickname выведет ваш nickname</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td></td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки последних 10 непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>$command</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Например get my nickname выведет ваш nickname</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td></td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки последних 10 непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>$command</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td></td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки последних 10 непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>get my id<hr>

1
<hr>get my email<hr>

e.grinec@gmail.com
<hr>get my status<hr>

admin
<hr>get my nickname<hr>

x-positive
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>$command</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td></td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки последних 10 непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>about ls<hr>

Справка по команде ls: RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options
<hr>about help<hr>

Справка по команде help: Вызов этой справки
<hr>help ls<hr>

Справка по команде ls: RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options
<hr>help help<hr>

Справка по команде help: Вызов этой справки
<hr>about<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>$command</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td></td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки последних 10 непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки последних 10 непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass</td><td>Регистрация нового пользователя</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>aliases help<hr>

about|man|info|штащ|ьфт|рудз|manual|про|о|об|?|tutorial|hotkeys|keys|reference|inquiry|enquiry|помощь|справка|руковоство|мануал|мануэль|мануил|эмануэль|исмаил|измаил|иммануил|ман|мэн|чаво|faq|факью|omg|motherofgod|godhelpme|helpme|sos|intoduce
<hr>aliases help<hr>

about|man|info|штащ|ьфт|рудз|manual|про|о|об|?|tutorial|hotkeys|keys|reference|inquiry|enquiry|помощь|справка|руковоство|мануал|мануэль|мануил|эмануэль|исмаил|измаил|иммануил|ман|мэн|чаво|faq|факью|omg|motherofgod|godhelpme|helpme|sos|intoduce
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>get my status<hr>

admin
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>cal<hr>

Календарь на 2015 год:

       Январь               Февраль                 Март          
Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  
             1  2  3   1  2  3  4  5  6  7   1  2  3  4  5  6  7  
 4  5  6  7  8  9 10   8  9 10 11 12 13 14   8  9 10 11 12 13 14  
11 12 13 14 15 16 17  15 16 17 18 19 20 21  15 16 17 18 19 20 21  
18 19 20 21 22 23 24  22 23 24 25 26 27 28  22 23 24 25 26 27 28  
25 26 27 28 29 30 31                        29 30 31              
                                                                  

       Апрель                 Май                   Июнь          
Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  
          1  2  3  4                  1  2      1  2  3  4  5  6  
 5  6  7  8  9 10 11   3  4  5  6  7  8  9   7  8  9 10 11 12 13  
12 13 14 15 16 17 18  10 11 12 13 14 15 16  14 15 16 17 18 19 20  
19 20 21 22 23 24 25  17 18 19 20 21 22 23  21 22 23 24 25 26 27  
26 27 28 29 30        24 25 26 27 28 29 30  28 29 30              
                      31                                          

        Июль                 Август               Сентябрь        
Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  
          1  2  3  4                     1         1  2  3  4  5  
 5  6  7  8  9 10 11   2  3  4  5  6  7  8   6  7  8  9 10 11 12  
12 13 14 15 16 17 18   9 10 11 12 13 14 15  13 14 15 16 17 18 19  
19 20 21 22 23 24 25  16 17 18 19 20 21 22  20 21 22 23 24 25 26  
26 27 28 29 30 31     23 24 25 26 27 28 29  27 28 29 30           
                      30 31                                       

      Октябрь                Ноябрь               Декабрь         
Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  Вс Пн Вт Ср Чт Пт Сб  
             1  2  3   1  2  3  4  5  6  7         1  2  3  4  5  
 4  5  6  7  8  9 10   8  9 10 11 12 13 14   6  7  8  9 10 11 12  
11 12 13 14 15 16 17  15 16 17 18 19 20 21  13 14 15 16 17 18 19  
18 19 20 21 22 23 24  22 23 24 25 26 27 28  20 21 22 23 24 25 26  
25 26 27 28 29 30 31  29 30                 27 28 29 30 31

<hr>epigraph<hr>

Более одаренные люди ведут общество вперед, облегчая остальным условия жизни.
<hr>epigraph<hr>

Думать — самая трудная работа; вот, вероятно, почему этим занимаются, столь не многие.
<hr>epigraph 4<hr>

Время не любит, когда его тратят впустую.
<hr>epigraph 4<hr>

Время не любит, когда его тратят впустую.
<hr>epigraph<hr>

Если у тебя есть энтузиазм, ты можешь совершить всё, что угодно. Энтузиазм — это основа любого прогресса.
<hr>epigraph 4<hr>

Время не любит, когда его тратят впустую.
<hr>epigraph 5<hr>

Всё можно сделать лучше, чем делалось до сих пор.
<hr>epigraph 0<hr>

Думать — самая трудная работа; вот, вероятно, почему этим занимаются столь не многие.
<hr>epigraph -1<hr>


<hr>epigraph 10<hr>

Успешные люди вырываются вперёд, используя то время которое остальные используют в пустую.
<hr>epigraph 100<hr>


<hr>epigraph 50<hr>


<hr>epigraph 40<hr>


<hr>epigraph 20<hr>


<hr>epigraph 10<hr>

Успешные люди вырываются вперёд, используя то время которое остальные используют в пустую.
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>epigraph<hr>

Успешные люди вырываются вперёд, используя то время которое остальные используют в пустую.
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. <em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Если вы хотите создать дамп и просмотреть его содержимое в консоли, используйте команду get dump.</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайный эпиграф или эпиграф с номером $id</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get mysql dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>dump<hr>

Святые одуванчики! У нас проблемы!
<hr>pwd<hr>

Текущим какталогом сейчас является /home/x-positive/srv/adeptx
<hr>dump<hr>

Дамп _2015-09-27_18-38-42.sql успешно создан в папку дампов и бекапов "extra/copy/". Создание дампа с просмотром осуществляется командой get mysql dump.

<hr>dump<hr>

Дамп _2015-09-27_18-39-29.sql успешно создан в папку дампов и бекапов "extra/copy/". Создание дампа с просмотром осуществляется командой get mysql dump.

<hr>get mysql dump<hr>

Дамп _2015-09-27_18-39-29.sql успешно создан в папку дампов и бекапов "extra/copy/". Создание дампа с просмотром осуществляется командой get mysql dump.
Ошибка создания и открытия дампа
<hr>dump<hr>

Дамп _2015-09-27_18-41-42.sql успешно создан в папку дампов и бекапов "extra/copy/". Создание дампа с просмотром осуществляется командой get mysql dump.

<hr>get mysql dump<hr>

Дамп _2015-09-27_18-41-42.sql успешно создан в папку дампов и бекапов "extra/copy/". Создание дампа с просмотром осуществляется командой get mysql dump.
SET FOREIGN_KEY_CHECKS = 0;

-- 
-- Table structure for table `adeptx_epigraph` 
-- 

DROP TABLE IF EXISTS `adeptx_epigraph`;
CREATE TABLE `adeptx_epigraph` (
`id` int(15) NOT NULL auto_increment,
`epigraph` varchar(255) NOT NULL,
`utter` varchar(255),
`footnote` varchar(255),
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=66;

-- --------------------------------------------------------

-- 
-- Table structure for table `adeptx_session` 
-- 

DROP TABLE IF EXISTS `adeptx_session`;
CREATE TABLE `adeptx_session` (
`id` bigint(255) NOT NULL auto_increment,
`user_id` bigint(255) NOT NULL,
`line_desc` varchar(255) NOT NULL,
`line_value` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3;

-- --------------------------------------------------------

-- 
-- Table structure for table `adeptx_user` 
-- 

DROP TABLE IF EXISTS `adeptx_user`;
CREATE TABLE `adeptx_user` (
`id` bigint(255) NOT NULL auto_increment,
`nickname` varchar(255) NOT NULL,
`email` varchar(255) NOT NULL,
`hash` varchar(255) NOT NULL,
`salt` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=22;

-- --------------------------------------------------------

-- 
-- Table structure for table `adeptx_user_message` 
-- 

DROP TABLE IF EXISTS `adeptx_user_message`;
CREATE TABLE `adeptx_user_message` (
`id` int(15) NOT NULL auto_increment,
`to_uid` int(9) NOT NULL,
`subject` varchar(255) NOT NULL,
`message` text,
`from_uid` int(9) NOT NULL,
`sender_ip` varchar(255),
`date_sent` timestamp DEFAULT '2015-09-25 19:14:43' NOT NULL,
`was_read` tinyint(1),
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8;

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_epigraph` 
-- 

INSERT INTO `adeptx_epigraph` (`id`, `epigraph`, `utter`, `footnote`) VALUES ('1','Машины должны работать. Люди должны думать.','Лозунг IBM',''),
 ('2','Почта должна доставляться вовремя.','Из причины запрета на учебник математики в РФ',''),
 ('3','Вам были даны другие качества.\nВы тот, кто не может сыграть то, чего на самом деле не чувствует.','Мария Герасимова',''),
 ('4','Вы вызываете у меня искреннюю улыбку...\nВ этом есть романтика нашего времени, Вы не находите?','Мария Герасимова',''),
 ('5','Smile! Why? Becouse you can.','',''),
 ('6','Никогда не заставляйте родителей сомневаться в однажды принятом решении.','',''),
 ('7','Тот, кто лишен чувства юмора, может быть абсолютно свободен и ничего не бояться, так как самое страшное с ним уже произошло.','',''),
 ('8','Фразы бесподобны, только они вторичны. Мой дорогой человек, я желаю Вам меньше думать о том, как произвести впечатление, Вы — стоящее доказательство всему вышесказанному.','Мария Герасимова',''),
 ('9','Не принимай подачки, а бьют — давай сдачи.','Мария Малиновская aka Mizz Paper',''),
 ('10','Никогда не благодарите за искренность.','Мария Герасимова',''),
 ('11','Вы слишком интересны и идеальны, будто искусственные.','Мария Герасимова',''),
 ('12','Если не любите рисковать, не начинайте свое дело. Наймитесь к тем людям, которые рисковать готовы.','<a href="http://habrahabr.ru/company/yandex/blog/208886/#comment_7198828">Ксения Елкина</a>',''),
 ('13','Каждый охотник знать желает, где фазаны обитают.','Не помогло',''),
 ('14','Мы все притворщики.\nКто-то маски носит лучше, кто-то - хуже.','Мария Герасимова',''),
 ('15','Дисциплина — это не ограничение свободы.\nЭто отсечение всего лишнего.','Брюс Ли',''),
 ('16','Оболочка не важна, никогда.','Яна Толмачева',''),
 ('17','Слова пусты, но суть велика и значительна.','Мария Малиновская',''),
 ('18','Хочешь популярности — научись удивлять, хочешь познать — умей удивляться.','',''),
 ('19','Не все парни забывают.','Виталий Омельченко',''),
 ('20','Успешные люди меняются сами, остальных меняет жизнь.','Джим Рон',''),
 ('21','никогда свобода суицид','Марти Кан',''),
 ('22','If all objects and people in daily life were equipped with identifiers,\nthey could be managed and inventoried by computers','Концепция IoT',''),
 ('23','Раз все объекты и люди в быту оснащены идентификаторами,\nих можно регулировать и инвентаризовать компьютерами.','Концепция «Интернета вещей»',''),
 ('24','Если не можешь простить, вспомни, сколько прощено тебе.','',''),
 ('25','Если вы до сих пор не поняли, чем мы занимаемся, значит мы хорошо справляемся.','',''),
 ('26','Наши любимые игры: Business, Development, Sales & Marketing.','',''),
 ('27','Вся проблема современной системы образования в том, что учителя преимущественно женщины, при том, что парни и девушки учатся вместе.','',''),
 ('28','Любящий многих — познает женщин.\nЛюбящий одну — познает любовь.','',''),
 ('29','Когда молчание вдвоем не напрягает, ты понимаешь, что нашел кого-то особенного.','',''),
 ('30','Богатство — это состояние ума.','',''),
 ('31','Все так бояться остаться никем в этой жизни, что становятся кем попало.','',''),
 ('32','Люди действительно готовы продать все, если цена их устроит.','Чак Паланик',''),
 ('33','Там, где все горбаты, стройность становится уродством.','Оноре де Бальзак',''),
 ('34','Неважно сколько у вас ресурсов. Если вы не умеете их правильно использовать, их никогда не будет достаточно.','Анна Бурхович',''),
 ('35','Нельзя приходить и уходить, когда вздумается.\nНельзя просто оставлять человека на улице в дождь, а на следующее утро ждать, что он бросится к тебе на шею.','',''),
 ('36','Если вы думаете, что сможете — вы сможете,\nесли думаете, что нет — вы правы.','Мао Цзэдун',''),
 ('37','Если вы думаете, что вы способны на что-то, вы правы, если вы думаете, что у вас не получится что-то, вы тоже правы.','Генри Форд',''),
 ('38','Пройдёмте в сад?\nЯ покажу Вас розам...','Ричард Шеридан',''),
 ('39','Да не о том думай, что спросили, а о том, для чего?\nДогадаешься, для чего, тогда и поймешь, как надо ответить.','Максим Горький',''),
 ('40','Будьте добрее, когда это возможно.\nА это возможно всегда.','',''),
 ('41','Практикуйте хаотичное добро!','Антон Громов',''),
 ('42','Будьте добрее, а то как лохи.','Даша Солнцева',''),
 ('43','Жизнь пролетает моментально,\nА мы живем, как будто пишем черновик,<br>Не понимая в суете скандальной,\nЧто наша жизнь — всего лишь только миг.','',''),
 ('44','Неуверенность разрушила столько возможностей.','Эрих Мария Ремарк',''),
 ('45','Вчера я бежал запломбировать зуб\nИ смех меня брал на бегу:\nВсю жизнь я таскаю свой будущий труп\nИ рьяно его берегу.','Губерман',''),
 ('46','Лучшее что нам доступно, это самопознание.','',''),
 ('47','Спрашивать: «Кто должен быть боссом?» — всё равно, что спрашивать: «Кто должен быть тенором в этом квартете?». Конечно тот, кто может петь тенором.','Генри Форд',''),
 ('48','Боссами становятся те, кто может быть боссом.','',''),
 ('49','Гимнастика — это полная чушь. Здоровым она не нужна, а больным противопоказана.','Генри Форд',''),
 ('50','Когда я не могу управлять событиями, я представляю им самим управлять собой.','Генри Форд',''),
 ('51','Думать — самая трудная работа; вот, вероятно, почему этим занимаются, столь не многие.','Генри Форд',''),
 ('52','Я не знаю какой результат принесёт мне реклама, но даже если я заработаю доллар — я вложу его в рекламу.','Генри Форд',''),
 ('53','Я никогда не говорю: «Мне нужно, чтоб вы это сделали». Я говорю: «Мне интересно, сумеете ли вы это сделать».','Генри Форд',''),
 ('54','Когда кажется, что весь мир настроен против тебя, помни, что самолёт взлетает против ветра.','Генри Форд',''),
 ('55','Nothing is particularly hard if you divide it into small jobs.','Генри Форд',''),
 ('56','Время не любит, когда его тратят впустую.','Генри Форд',''),
 ('57','Всё можно сделать лучше, чем делалось до сих пор.','Генри Форд',''),
 ('58','Если бы я спросил людей, чего они хотят, они бы попросили более быструю лошадь.','Генри Форд',''),
 ('59','Если у тебя есть энтузиазм, ты можешь совершить всё, что угодно. Энтузиазм — это основа любого прогресса.','Генри Форд',''),
 ('60','Женщина — это не только вагон удовольствий, но и три, а то и четыре тонны проблем.','Генри Форд',''),
 ('61','Более одаренные люди ведут общество вперед, облегчая остальным условия жизни.','Генри Форд',''),
 ('62','Успешные люди вырываются вперёд, используя то время которое остальные используют в пустую.','Генри Форд',''),
 ('63','Гораздо больше людей сдавшихся, чем побежденных.','Генри Форд',''),
 ('64','Мой секрет успеха заключается в умении понять точку зрения другого человека и смотреть на вещи и с его и со своей точек зрения.','Генри Форд',''),
 ('65','Когда часто выходишь за зону комфорта, становится скучно, а спастись от скуки ещё сложнее, чем почувствовать себя свободным','Евгения Матросова','');

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_session` 
-- 

INSERT INTO `adeptx_session` (`id`, `user_id`, `line_desc`, `line_value`) VALUES ('1','1','cloud','fm'),
 ('2','2','cloud','diff');

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_user` 
-- 

INSERT INTO `adeptx_user` (`id`, `nickname`, `email`, `hash`, `salt`) VALUES ('1','x-positive','e.grinec@gmail.com','6ab39c41030d3888846c4ecb11375bb3ad7138f7879ac19f2f9e192f7614cf1523f1b3ac951eea304b09d911d3797f32','5024467d5acfd9d9d3592340ee2800cf'),
 ('2','gcorp','gcorp.gcorp@gmail.com','0359ac6aa8df54fe9dad42ef88a5134e5d2389e4339cdc91330de5f6bdf24e8f1c2081763a03d00838c1aa16f18db61e','0cc27475046ec987dfc168c0669b6323'),
 ('21','test','','74be16979710d4c4e7c6647856088456098f6bcd4621d373cade4e832627b4f6ad9402f64107cd7857359e6849622ce2','d41d8cd98f00b204e9800998ecf8427e');

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_user_message` 
-- 

INSERT INTO `adeptx_user_message` (`id`, `to_uid`, `subject`, `message`, `from_uid`, `sender_ip`, `date_sent`, `was_read`) VALUES ('1','2','Тест 1','Тестовое сообщение 1','1','127.0.0.1','2009-09-09 22:22:22','1'),
 ('2','2','Тест 2','Тестовое сообщение 2 (непрочитанное сообщение. первое прочитано)','1','127.0.0.1','2015-09-10 22:29:10','0'),
 ('3','1','Simple 1','Пример прочитанного сообщения','2','127.0.0.1','2015-09-10 22:42:10','1'),
 ('4','0','Тестовое сообщение','Так будут выглядеть ваши новые непрочитанные сообщения когда вы зарегистрируетесь.<br>Это лишь один из многих мессенджеров, вы можете подключать любой мессенджер, в том числе писать свой собственный. <br>Как следствие темы оформления могут быть любыми, как и настройки считывания сообщений.','2','127.0.0.1','2015-09-10 23:41:11','0'),
 ('5','1','Simple 2','Simple letter 2','2','127.0.0.1','2015-09-10 23:44:11','0'),
 ('6','1','Simple 3','Simple letter 3','0','127.0.0.1','2015-09-10 23:49:11','0'),
 ('7','1','Simple 4','Simple letter 3','0','127.0.0.1','2015-09-10 23:50:11','0');

-- --------------------------------------------------------

SET FOREIGN_KEY_CHECKS = 1;


<hr>get last dump<hr>

SET FOREIGN_KEY_CHECKS = 0;

-- 
-- Table structure for table `adeptx_epigraph` 
-- 

DROP TABLE IF EXISTS `adeptx_epigraph`;
CREATE TABLE `adeptx_epigraph` (
`id` int(15) NOT NULL auto_increment,
`epigraph` varchar(255) NOT NULL,
`utter` varchar(255),
`footnote` varchar(255),
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=66;

-- --------------------------------------------------------

-- 
-- Table structure for table `adeptx_session` 
-- 

DROP TABLE IF EXISTS `adeptx_session`;
CREATE TABLE `adeptx_session` (
`id` bigint(255) NOT NULL auto_increment,
`user_id` bigint(255) NOT NULL,
`line_desc` varchar(255) NOT NULL,
`line_value` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3;

-- --------------------------------------------------------

-- 
-- Table structure for table `adeptx_user` 
-- 

DROP TABLE IF EXISTS `adeptx_user`;
CREATE TABLE `adeptx_user` (
`id` bigint(255) NOT NULL auto_increment,
`nickname` varchar(255) NOT NULL,
`email` varchar(255) NOT NULL,
`hash` varchar(255) NOT NULL,
`salt` varchar(255) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=22;

-- --------------------------------------------------------

-- 
-- Table structure for table `adeptx_user_message` 
-- 

DROP TABLE IF EXISTS `adeptx_user_message`;
CREATE TABLE `adeptx_user_message` (
`id` int(15) NOT NULL auto_increment,
`to_uid` int(9) NOT NULL,
`subject` varchar(255) NOT NULL,
`message` text,
`from_uid` int(9) NOT NULL,
`sender_ip` varchar(255),
`date_sent` timestamp DEFAULT '2015-09-25 19:14:43' NOT NULL,
`was_read` tinyint(1),
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8;

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_epigraph` 
-- 

INSERT INTO `adeptx_epigraph` (`id`, `epigraph`, `utter`, `footnote`) VALUES ('1','Машины должны работать. Люди должны думать.','Лозунг IBM',''),
 ('2','Почта должна доставляться вовремя.','Из причины запрета на учебник математики в РФ',''),
 ('3','Вам были даны другие качества.\nВы тот, кто не может сыграть то, чего на самом деле не чувствует.','Мария Герасимова',''),
 ('4','Вы вызываете у меня искреннюю улыбку...\nВ этом есть романтика нашего времени, Вы не находите?','Мария Герасимова',''),
 ('5','Smile! Why? Becouse you can.','',''),
 ('6','Никогда не заставляйте родителей сомневаться в однажды принятом решении.','',''),
 ('7','Тот, кто лишен чувства юмора, может быть абсолютно свободен и ничего не бояться, так как самое страшное с ним уже произошло.','',''),
 ('8','Фразы бесподобны, только они вторичны. Мой дорогой человек, я желаю Вам меньше думать о том, как произвести впечатление, Вы — стоящее доказательство всему вышесказанному.','Мария Герасимова',''),
 ('9','Не принимай подачки, а бьют — давай сдачи.','Мария Малиновская aka Mizz Paper',''),
 ('10','Никогда не благодарите за искренность.','Мария Герасимова',''),
 ('11','Вы слишком интересны и идеальны, будто искусственные.','Мария Герасимова',''),
 ('12','Если не любите рисковать, не начинайте свое дело. Наймитесь к тем людям, которые рисковать готовы.','<a href="http://habrahabr.ru/company/yandex/blog/208886/#comment_7198828">Ксения Елкина</a>',''),
 ('13','Каждый охотник знать желает, где фазаны обитают.','Не помогло',''),
 ('14','Мы все притворщики.\nКто-то маски носит лучше, кто-то - хуже.','Мария Герасимова',''),
 ('15','Дисциплина — это не ограничение свободы.\nЭто отсечение всего лишнего.','Брюс Ли',''),
 ('16','Оболочка не важна, никогда.','Яна Толмачева',''),
 ('17','Слова пусты, но суть велика и значительна.','Мария Малиновская',''),
 ('18','Хочешь популярности — научись удивлять, хочешь познать — умей удивляться.','',''),
 ('19','Не все парни забывают.','Виталий Омельченко',''),
 ('20','Успешные люди меняются сами, остальных меняет жизнь.','Джим Рон',''),
 ('21','никогда свобода суицид','Марти Кан',''),
 ('22','If all objects and people in daily life were equipped with identifiers,\nthey could be managed and inventoried by computers','Концепция IoT',''),
 ('23','Раз все объекты и люди в быту оснащены идентификаторами,\nих можно регулировать и инвентаризовать компьютерами.','Концепция «Интернета вещей»',''),
 ('24','Если не можешь простить, вспомни, сколько прощено тебе.','',''),
 ('25','Если вы до сих пор не поняли, чем мы занимаемся, значит мы хорошо справляемся.','',''),
 ('26','Наши любимые игры: Business, Development, Sales & Marketing.','',''),
 ('27','Вся проблема современной системы образования в том, что учителя преимущественно женщины, при том, что парни и девушки учатся вместе.','',''),
 ('28','Любящий многих — познает женщин.\nЛюбящий одну — познает любовь.','',''),
 ('29','Когда молчание вдвоем не напрягает, ты понимаешь, что нашел кого-то особенного.','',''),
 ('30','Богатство — это состояние ума.','',''),
 ('31','Все так бояться остаться никем в этой жизни, что становятся кем попало.','',''),
 ('32','Люди действительно готовы продать все, если цена их устроит.','Чак Паланик',''),
 ('33','Там, где все горбаты, стройность становится уродством.','Оноре де Бальзак',''),
 ('34','Неважно сколько у вас ресурсов. Если вы не умеете их правильно использовать, их никогда не будет достаточно.','Анна Бурхович',''),
 ('35','Нельзя приходить и уходить, когда вздумается.\nНельзя просто оставлять человека на улице в дождь, а на следующее утро ждать, что он бросится к тебе на шею.','',''),
 ('36','Если вы думаете, что сможете — вы сможете,\nесли думаете, что нет — вы правы.','Мао Цзэдун',''),
 ('37','Если вы думаете, что вы способны на что-то, вы правы, если вы думаете, что у вас не получится что-то, вы тоже правы.','Генри Форд',''),
 ('38','Пройдёмте в сад?\nЯ покажу Вас розам...','Ричард Шеридан',''),
 ('39','Да не о том думай, что спросили, а о том, для чего?\nДогадаешься, для чего, тогда и поймешь, как надо ответить.','Максим Горький',''),
 ('40','Будьте добрее, когда это возможно.\nА это возможно всегда.','',''),
 ('41','Практикуйте хаотичное добро!','Антон Громов',''),
 ('42','Будьте добрее, а то как лохи.','Даша Солнцева',''),
 ('43','Жизнь пролетает моментально,\nА мы живем, как будто пишем черновик,<br>Не понимая в суете скандальной,\nЧто наша жизнь — всего лишь только миг.','',''),
 ('44','Неуверенность разрушила столько возможностей.','Эрих Мария Ремарк',''),
 ('45','Вчера я бежал запломбировать зуб\nИ смех меня брал на бегу:\nВсю жизнь я таскаю свой будущий труп\nИ рьяно его берегу.','Губерман',''),
 ('46','Лучшее что нам доступно, это самопознание.','',''),
 ('47','Спрашивать: «Кто должен быть боссом?» — всё равно, что спрашивать: «Кто должен быть тенором в этом квартете?». Конечно тот, кто может петь тенором.','Генри Форд',''),
 ('48','Боссами становятся те, кто может быть боссом.','',''),
 ('49','Гимнастика — это полная чушь. Здоровым она не нужна, а больным противопоказана.','Генри Форд',''),
 ('50','Когда я не могу управлять событиями, я представляю им самим управлять собой.','Генри Форд',''),
 ('51','Думать — самая трудная работа; вот, вероятно, почему этим занимаются, столь не многие.','Генри Форд',''),
 ('52','Я не знаю какой результат принесёт мне реклама, но даже если я заработаю доллар — я вложу его в рекламу.','Генри Форд',''),
 ('53','Я никогда не говорю: «Мне нужно, чтоб вы это сделали». Я говорю: «Мне интересно, сумеете ли вы это сделать».','Генри Форд',''),
 ('54','Когда кажется, что весь мир настроен против тебя, помни, что самолёт взлетает против ветра.','Генри Форд',''),
 ('55','Nothing is particularly hard if you divide it into small jobs.','Генри Форд',''),
 ('56','Время не любит, когда его тратят впустую.','Генри Форд',''),
 ('57','Всё можно сделать лучше, чем делалось до сих пор.','Генри Форд',''),
 ('58','Если бы я спросил людей, чего они хотят, они бы попросили более быструю лошадь.','Генри Форд',''),
 ('59','Если у тебя есть энтузиазм, ты можешь совершить всё, что угодно. Энтузиазм — это основа любого прогресса.','Генри Форд',''),
 ('60','Женщина — это не только вагон удовольствий, но и три, а то и четыре тонны проблем.','Генри Форд',''),
 ('61','Более одаренные люди ведут общество вперед, облегчая остальным условия жизни.','Генри Форд',''),
 ('62','Успешные люди вырываются вперёд, используя то время которое остальные используют в пустую.','Генри Форд',''),
 ('63','Гораздо больше людей сдавшихся, чем побежденных.','Генри Форд',''),
 ('64','Мой секрет успеха заключается в умении понять точку зрения другого человека и смотреть на вещи и с его и со своей точек зрения.','Генри Форд',''),
 ('65','Когда часто выходишь за зону комфорта, становится скучно, а спастись от скуки ещё сложнее, чем почувствовать себя свободным','Евгения Матросова','');

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_session` 
-- 

INSERT INTO `adeptx_session` (`id`, `user_id`, `line_desc`, `line_value`) VALUES ('1','1','cloud','fm'),
 ('2','2','cloud','diff');

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_user` 
-- 

INSERT INTO `adeptx_user` (`id`, `nickname`, `email`, `hash`, `salt`) VALUES ('1','x-positive','e.grinec@gmail.com','6ab39c41030d3888846c4ecb11375bb3ad7138f7879ac19f2f9e192f7614cf1523f1b3ac951eea304b09d911d3797f32','5024467d5acfd9d9d3592340ee2800cf'),
 ('2','gcorp','gcorp.gcorp@gmail.com','0359ac6aa8df54fe9dad42ef88a5134e5d2389e4339cdc91330de5f6bdf24e8f1c2081763a03d00838c1aa16f18db61e','0cc27475046ec987dfc168c0669b6323'),
 ('21','test','','74be16979710d4c4e7c6647856088456098f6bcd4621d373cade4e832627b4f6ad9402f64107cd7857359e6849622ce2','d41d8cd98f00b204e9800998ecf8427e');

-- --------------------------------------------------------

-- 
-- Dumping data for table `adeptx_user_message` 
-- 

INSERT INTO `adeptx_user_message` (`id`, `to_uid`, `subject`, `message`, `from_uid`, `sender_ip`, `date_sent`, `was_read`) VALUES ('1','2','Тест 1','Тестовое сообщение 1','1','127.0.0.1','2009-09-09 22:22:22','1'),
 ('2','2','Тест 2','Тестовое сообщение 2 (непрочитанное сообщение. первое прочитано)','1','127.0.0.1','2015-09-10 22:29:10','0'),
 ('3','1','Simple 1','Пример прочитанного сообщения','2','127.0.0.1','2015-09-10 22:42:10','1'),
 ('4','0','Тестовое сообщение','Так будут выглядеть ваши новые непрочитанные сообщения когда вы зарегистрируетесь.<br>Это лишь один из многих мессенджеров, вы можете подключать любой мессенджер, в том числе писать свой собственный. <br>Как следствие темы оформления могут быть любыми, как и настройки считывания сообщений.','2','127.0.0.1','2015-09-10 23:41:11','0'),
 ('5','1','Simple 2','Simple letter 2','2','127.0.0.1','2015-09-10 23:44:11','0'),
 ('6','1','Simple 3','Simple letter 3','0','127.0.0.1','2015-09-10 23:49:11','0'),
 ('7','1','Simple 4','Simple letter 3','0','127.0.0.1','2015-09-10 23:50:11','0');

-- --------------------------------------------------------

SET FOREIGN_KEY_CHECKS = 1;


<hr>цитата<hr>

Я никогда не говорю: «Мне нужно, чтоб вы это сделали». Я говорю: «Мне интересно, сумеете ли вы это сделать».
<hr>"цитата дня" 4<hr>

Время не любит, когда его тратят впустую.
<hr>"цитата дня" 4<hr>

Время не любит, когда его тратят впустую.
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. Специфически в системе реализован функционал синонимов вызываемых команд. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`) и вы сами всё поймёте. Например, цитату дня можно посмотреть такими способами: `quote`, `цитата` или даже `"цитата дня"`<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайный эпиграф или эпиграф с номером $id</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>aliases help<hr>

about|man|info|штащ|ьфт|рудз|manual|про|о|об|?|tutorial|hotkeys|keys|reference|inquiry|enquiry|помощь|справка|руковоство|мануал|мануэль|мануил|эмануэль|исмаил|измаил|иммануил|ман|мэн|чаво|faq|факью|omg|motherofgod|godhelpme|helpme|sos|intoduce
<hr>aliases quote<hr>

Для команды "quote" не обнаружено псевдонимов. Если введённое вами имя вообще соответствует реальному имени существующей команды, а не её пседвониму, это означает, что эта команда работает только по прямому имени.
<hr>aliases epigraph<hr>

узшпкфзр|prase|citation|quote|quotation|сшефешщт|цитата|цитата дня|wbnfnf|wbnfnf lyz
<hr>add alias help booblik<hr>

Мы "типо" создали новый псевдоним `booblik` для команды `help` (на самом деле это всего лишь заглушка пока что)
<hr>add alias boOblik for point_blank<hr>

Мы "типо" создали новый псевдоним `for` для команды `boOblik` (на самом деле это всего лишь заглушка пока что)
<hr>add alias boOblik for point_blank<hr>

Мы "типо" создали новый псевдоним `point_blank` для команды `boOblik` (на самом деле это всего лишь заглушка пока что)
<hr>add alias help booblik<hr>

Мы "типо" создали новый псевдоним `booblik` для команды `help` (на самом деле это всего лишь заглушка пока что)
<hr>add alias boOblik for point_blank<hr>

Мы "типо" создали новый псевдоним `boOblik` для команды `point_blank` (на самом деле это всего лишь заглушка пока что)
<hr>add alias boOblik for point_blank<hr>

Мы "типо" создали новый псевдоним `boOblik` для команды `point_blank` (на самом деле это всего лишь заглушка пока что)
<hr>add alias boOblik for point_blank<hr>

Мы "типо" создали новый псевдоним `boOblik` для команды `point_blank` (на самом деле это всего лишь заглушка пока что)
<hr>add alias help booblik<hr>

Мы "типо" создали новый псевдоним `booblik` для команды `help` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias help booblik<hr>


<hr>add new alias help for booblik<hr>


<hr>add new alias help for booblik<hr>

Мы "типо" создали новый псевдоним `help` для команды `for` (на самом деле это всего лишь заглушка пока что)
<hr>add alias help booblik<hr>

Мы "типо" создали новый псевдоним `booblik` для команды `help` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias help for booblik<hr>

Мы "типо" создали новый псевдоним `help` для команды `for` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias help booblik<hr>

Мы "типо" создали новый псевдоним `booblik` для команды `help` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias help for booblik<hr>

Мы "типо" создали новый псевдоним `help` для команды `for` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias help for booblik<hr>

Мы "типо" создали новый псевдоним `help` для команды `booblik` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias "help" booblik<hr>

Мы "типо" создали новый псевдоним `booblik` для команды `help` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias "help" for booblik<hr>

Мы "типо" создали новый псевдоним `help` для команды `booblik` (на самом деле это всего лишь заглушка пока что)
<hr>add alias al cmd<hr>

Мы "типо" создали новый псевдоним `al` для команды `cmd` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias al1 cmd2<hr>

Мы "типо" создали новый псевдоним `al1` для команды `cmd2` (на самом деле это всего лишь заглушка пока что)
<hr>add alias al2 for cmd2<hr>

Мы "типо" создали новый псевдоним `al2` для команды `cmd2` (на самом деле это всего лишь заглушка пока что)
<hr>add alias cl3 for command cmd3<hr>

Мы "типо" создали новый псевдоним `cl3` для команды `cmd3` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias al4 for command cmd4<hr>

Мы "типо" создали новый псевдоним `al4` для команды `cmd4` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias cl3 for cmd3<hr>

Мы "типо" создали новый псевдоним `cl3` для команды `cmd3` (на самом деле это всего лишь заглушка пока что)
<hr>add new alias cl3 cmd3<hr>

Мы "типо" создали новый псевдоним `cl3` для команды `cmd3` (на самом деле это всего лишь заглушка пока что)
<hr>add new user Toster with password testing<hr>



<hr>aliases help<hr>

about|man|info|штащ|ьфт|рудз|manual|про|о|об|?|tutorial|hotkeys|keys|reference|inquiry|enquiry|помощь|справка|руковоство|мануал|мануэль|мануил|эмануэль|исмаил|измаил|иммануил|ман|мэн|чаво|faq|факью|omg|motherofgod|godhelpme|helpme|sos|intoduce
<hr>aliases about<hr>

Команда `about` является псевдонимом команды `help`, для просмотра других псевдонимов следует использовать `aliases help`. Все псевдонимы команды: about|man|info|штащ|ьфт|рудз|manual|про|о|об|?|tutorial|hotkeys|keys|reference|inquiry|enquiry|помощь|справка|руковоство|мануал|мануэль|мануил|эмануэль|исмаил|измаил|иммануил|ман|мэн|чаво|faq|факью|omg|motherofgod|godhelpme|helpme|sos|intoduce
<hr>introduce add<hr>

Справка по команде add: Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)
<hr>names<hr>


Русские мужские имена на букву А: Август (стар.) – летний Августин (стар.) – летний Авенир (стар.) - от франц. avenir - грядущий, будущий Авксентий (стар.) - чужой "ксенос" Аврор / Аврорий (нов.) – сын утренней зари Адам (стар.) – "из красной глины" Адонис (стар.) – владыка Алевтин (нов.) – чуждый дурного Александр (стар.) – защитник людей Алексей (стар.) – защитник Альберт (нов.) – мудрый Альбин (нов.) – "белый" Альфред (нов.) – хороший советник Анастасий (стар.) – воскресший Анатолий (стар.) – восточный Андрей (стар.) – мужчина и защитник Анис / Анисий (стар.) – сладко пахнущий Антон / Антоний (стар.) – вступающий в бой Антонин (стар.) – добрый Антуан (нов.) - иноязычное прочтение Антона Аполлинарий (стар.) – сын солнца Аполлон (стар.) – бог солнца Аргент (нов.) - от франц. argent - серебряный Аристарх (стар.) – глава лучших Аркадий (стар.) – пастух или "Житель Аркадии" Арсен (нов.) – мужественный Арсений (стар.) – мужественный Артём / Артемий (стар.) – невредимый Артур (нов.) – большой как медведь Атеист (нов.) – не верующий Афанасий (стар.) – бессмертныйРусские мужские имена на букву Б:Бажен (др.-рус.) – святой Бенедикт (стар.) – благословенный Богдан (слав.) – данный богом Боеслав (слав.) – прославленный в бою Болеслав (слав.) – более славный Боримир (слав.) – борющийся за мир Борис (стар.) – "борец" Борислав (слав.) – борющийся за славу Бронислав (слав.) – славный защитник Будимир (др.-рус.) – миролюбивый Булат (нов.) – "крепкий"Русские мужские имена на букву В:Вадим (стар.) – сеющий смуту Валентин (стар.) – здоровый Валерий (стар.) – сильный Вальтер (нов.) – управляющий людьми Василий (стар.) – царский Василько (нар. от Василий) – царевич Велимир (слав.) – повелитель мира Велислав (слав.) – прославленный Велор / Велорий (нов.) - состоятельный Венедикт (стар.) - иное прочтение Бенедикта Вениамин (стар.) – древнеевр. "младший" Виктор (стар.) – победитель Вилен (нов.) - сокращение от В.И.ЛЕНин Виссарион (стар.) – лесной человек Виталий (стар.) – жизненный Витольд (слав.) – лесной властитель Влад (слав.) – владеющий Владилен (нов.) - аналогично ВЛАДИмир ЛЕНин Владимир (стар., слав.) – владеющий миром Владислав (стар., слав.) – владеющий славой Владлен (нов.) - аналогично ВЛАДимир ЛЕНин Воин (др.-рус.) – "воин" Воислав (слав.) – "прославленный в войне" Володар (старослав.) - "владыка" Вольдемар / Вальдемар (нов.) – знаменитый властитель Вольмир / Волемир (слав.) – повелитель мира Всеволод (стар., др.-рус.) – властелин всего народа Всемил (славв.) – всем мил Вячеслав (стар., слав.) – не раз прославившийсяРусские мужские имена на букву Г:Гавриил / Гаврила / Гаврило / Гаврил (стар.) – божественный воин Галактион (стар.) – звездный Гарри / Гаррий (нов.) – терпимый Гелиан / Гелий (нов.) - солнечный Гений (нов.) – "гений" Геннадий (стар.) – родовитый Георгий (стар.) – земледелец Герман (стар.) – родной Гертруд (нов.) - ГЕРой ТРУДа Глеб (стар., др.-руск.) – большой, высокий Гордей / Гордий (слав.) – гордый Горимир (слав.) – "светлый мир" Горислав (слав.) – "светлая слава" Гранит (нов.) – "твердый" Григорий (стар.) – не спящийРусские мужские имена на букву Д:Давыд / Давид (стар.) – любимый Дамир (нов.) – миролюбивый Дан (стар.) – бог луны Даниил / Данила / Данило / Данил (стар.) – "Божий суд" Дар (нов.) – "дар" Декабрий (нов.) – зимний Денис (нар. от стар. Дионисий) – бог жизненных сил природы Джеральд (нов.) - иное прочтение Гаральда Джозеф (нов.) - иное прочтение Жозефа, Иосифа, Осипа Джон (нов.) - иное прочтение Ивана Дионисий / Дионис (стар.) – бог растительности Дмитрий / Димитрий (стар.) – бог плодородия Добрыня (др.-рус.) – добрый молодец Дональт (стар.) – властелин мира Донат (стар.) – крепкийРусские мужские имена на букву Е:Евгений (стар.) – благородный Евдоким (стар.) – хорошо прославленный Егор (нар. от Георгий, Егорий) – земледелец Еруслан (др.-рус.) – "лев" Ефим (стар.) – благочестивыйРусские мужские имена на букву Ж:Ждан (др.-рус.) – ждущийРусские мужские имена на букву З:Захар (стар.) – "Божья память" Зиновий (стар.) – "Зевсова сила" Зорий (нов.) – утреннийРусские мужские имена на букву И:Ибрагим (нов.) - иное прочтение Абрама, Авраама, Аврома Иван (нар. от Иоанн) – "божий дар" Игнатий / Игнат (стар.) – неведомый Игорь (стар., др.-рус.) – защитник бога Исидор / Сидор (стар.) – покровитель плодородия Июлий (нов.) – летнийРусские мужские имена на букву К:Казимир (слав.) – объявляющий о мире Карл (нов.) – смелый Касьян (нар. от стар. Кассиан) – пустой Ким (нов.) - Коммунистический Интернационал Мира. Киприан (стар.) - уроженец Кипра или медный Кир (стар.) – господин Кирилл (стар.) – владыка Клавдий (стар.) – хромой или из рода Клавдиев Клемент (стар.) – милостивый Климент / Клим (стар.) – снисходительный Климентий / Клементий (нар. от Климент) – кроткий Колумбий (нов.) - "голубь" Кузьма / Козьма (нар. от стар. Косма) – украшенный Куприян (нар. от Киприан) - уроженец Кипра или медныйРусские мужские имена на букву Л:Лавр (стар.) – знаменитый Лаврентий (стар.) – увенчанный лаврами Лазарь (стар.) – "Божья помощь" Ларион (нар. от Иларион) – радостный Лев (стар.) – "лев" Леонард (нов.) - сильный Леонид (стар.) – сын льва Леонтий (стар.) – львиный Лука (стар.) – "счастье" Лукьян / Лукиан (стар.) – счастливый Любим (др.-рус.) – красавец Любомир (слав.) – любимец мира Люксен / Люциан (нов.) - светлыйРусские мужские имена на букву М:Маврикий (стар.) - черный Май (нов.) – теплое сердце Майслав / Маеслав (нов.) – прославившийся в мае Макар / Макарий (стар.) – счастливый Макс (нов.) – величавый Максим (стар.) – величавый Максимильян / Максимилиан (стар.) – величавый Милий (стар.) – милый Милонег (слав.) – милый Милослав (слав.) – слава мила Мир (нов.) – "мир" Мирон (стар.) – добрый Мирослав (слав.) – победитель Михаил / Михайло (стар.) – равный Богу Модест (стар.) – скромник Моисей (стар.) – извлеченный из воды Монолит (нов.) – незыблемыйРусские мужские имена на букву Н:Назар / Назарий (стар.) – посвященный Богу Натан (стар.) – дарованный Наум (стар.) – утешение Неон (стар.) – блистающий Неонил (стар.) – принципиальный Нестор / Нестер (стар.) – возвратившийся на родину Никандр (стар.) - победитель мужчин Норд (нов.) - север(ный)Русские мужские имена на букву О:Овидий (стар.) – спаситель Одиссей (нов.) – сердитий Октавиан (стар.) - (римское) - восьмой Октябрин (нов.) – осенний Октябрь (нов.) – осенний Олег (стар., др.-рус.) – святой Орест (стар.) – дикарь Осип (нар. от Иосиф) – приумноженный Оскар (стар.) – "Божье копьё"Русские мужские имена на букву П:Павел (стар.) – маленький Палладий (стар.) - посвященный Афине Палладе Пантелеймон / Пантелей (стар.) Панфил (стар.) - любящий всех Пересвет (др.-рус.) – светлый Пётр (стар.) – "скала" или "камень" Прохор (стар.) - руководитель хораРусские мужские имена на букву Р:Радий (нов.) - "радий" Радим (слав.) – родной Радислав (слав.) – рад славе Радомир (слав.) – рад мируРусские мужские имена на букву С:Савва / Сава (стар.) – желанный Савелий (стар.) – желанный Свет (нов.) – "свет" Светлан (слав.) – светлый Светозар (слав.) – светлый как заря Светослав (слав.) – "слава светла" Святогор (др.-рус.) - "святая гора" Святополк (др.-рус.) – "святой полк" Святослав (слав.) – "слава свята" Север (стар.) – "север" Северин (стар.) – холодный Северьян / Севериан (стар.) – северный Северян (нов.) – северный Семён (нар. от стар. Симеон) – услышанный Богом в молитве Серафим (стар.) – пламенный Сергей (стар.) – высокочтимый Сигизмунд (нов.) - … Сталь / Сталий (нов.) – твердый Станислав (слав.) – станет славным Степан / Стефан (стар.) – "венок"Русские мужские имена на букву Т:Тарас (стар.) – беспокойный Теймураз (нов.) - аналог Тимуру Тристан (стар.) - грустный (tristia) Трифон (стар.) – изнеженный Трофим (стар.) – питомецРусские мужские имена на букву Ф:Фадей / Фаддей (стар.) – "похвала" Февралин (нов.) – зимний Фёдор (стар.) – Божий дар Федор (стар.) – Божий дар Феликс (стар.) – преуспевающий Филимон (стар.) – любимый Филипп (стар.) – любящий лошадей Флегонт (стар.) - … Флорентий (стар.) – цветущий Флоренц (нов.) – цветущий Флорин (нов.) – цветущий Фрол (нар. от стар. Флор) – цветущийРусские мужские имена на букву Х:Харитон (стар.) – благодетель Храбр (др.-рус.) – храбрый Христоф (стар.) - (Христофор) - несущий ХристаРусские мужские имена на букву Э:Эдуард (нов.) – заботящийся о собственности Электрон (нов.) - янтарь Эльбрус (нов.) – "гора" Энергий (нов.) - энергичный Эрнест / Эрнст (нов.) – серьезныйЮвеналий (стар. от Иувеналий) - юный Юджин (нов.) – благородный Юлиан (стар. от Иулиан) – кудрявый Юлий (стар. от Иулий) – пушистый Юпитер (нов.) - "юпитер" Юрий (стар., нар. от Георгий) – земледелецРусские мужские имена на букву Я:Яков (стар. от Иаков) – подражающий Богу Ян (нов.) – "Бог солнца" Януарий (стар. от Ианнуарий) - январский Яромир (стар., слав.) – "солнечный мир" Ярополк (стар., слав.) – "солнечный" Ярослав (стар., слав.) – "горящая слава" или славящий Ярилу, древнеславянского бога
	
<hr>names<hr>


Русские мужские имена на букву А:

Август (стар.) – летний
Августин (стар.) – летний
Авенир (стар.) - от франц. avenir - грядущий, будущий
Авксентий (стар.) - чужой "ксенос"
Аврор / Аврорий (нов.) – сын утренней зари
Адам (стар.) – "из красной глины"
Адонис (стар.) – владыка
Алевтин (нов.) – чуждый дурного
Александр (стар.) – защитник людей
Алексей (стар.) – защитник
Альберт (нов.) – мудрый
Альбин (нов.) – "белый"
Альфред (нов.) – хороший советник
Анастасий (стар.) – воскресший
Анатолий (стар.) – восточный
Андрей (стар.) – мужчина и защитник
Анис / Анисий (стар.) – сладко пахнущий
Антон / Антоний (стар.) – вступающий в бой
Антонин (стар.) – добрый
Антуан (нов.) - иноязычное прочтение Антона
Аполлинарий (стар.) – сын солнца
Аполлон (стар.) – бог солнца
Аргент (нов.) - от франц. argent - серебряный
Аристарх (стар.) – глава лучших
Аркадий (стар.) – пастух или "Житель Аркадии"
Арсен (нов.) – мужественный
Арсений (стар.) – мужественный
Артём / Артемий (стар.) – невредимый
Артур (нов.) – большой как медведь
Атеист (нов.) – не верующий
Афанасий (стар.) – бессмертный

Русские мужские имена на букву Б:

Бажен (др.-рус.) – святой
Бенедикт (стар.) – благословенный
Богдан (слав.) – данный богом
Боеслав (слав.) – прославленный в бою
Болеслав (слав.) – более славный
Боримир (слав.) – борющийся за мир
Борис (стар.) – "борец"
Борислав (слав.) – борющийся за славу
Бронислав (слав.) – славный защитник
Будимир (др.-рус.) – миролюбивый
Булат (нов.) – "крепкий"

Русские мужские имена на букву В:

Вадим (стар.) – сеющий смуту
Валентин (стар.) – здоровый
Валерий (стар.) – сильный 
Вальтер (нов.) – управляющий людьми
Василий (стар.) – царский
Василько (нар. от Василий) – царевич
Велимир (слав.) – повелитель мира
Велислав (слав.) – прославленный
Велор / Велорий (нов.) - состоятельный
Венедикт (стар.) - иное прочтение Бенедикта
Вениамин (стар.) – древнеевр. "младший"
Виктор (стар.) – победитель
Вилен (нов.) - сокращение от В.И.ЛЕНин
Виссарион (стар.) – лесной человек
Виталий (стар.) – жизненный
Витольд (слав.) – лесной властитель
Влад (слав.) – владеющий Владилен (нов.) - аналогично ВЛАДИмир ЛЕНин Владимир (стар., слав.) – владеющий миром Владислав (стар., слав.) – владеющий славой Владлен (нов.) - аналогично ВЛАДимир ЛЕНин Воин (др.-рус.) – "воин" Воислав (слав.) – "прославленный в войне" Володар (старослав.) - "владыка" Вольдемар / Вальдемар (нов.) – знаменитый властитель Вольмир / Волемир (слав.) – повелитель мира Всеволод (стар., др.-рус.) – властелин всего народа Всемил (славв.) – всем мил Вячеслав (стар., слав.) – не раз прославившийсяРусские мужские имена на букву Г:Гавриил / Гаврила / Гаврило / Гаврил (стар.) – божественный воин Галактион (стар.) – звездный Гарри / Гаррий (нов.) – терпимый Гелиан / Гелий (нов.) - солнечный Гений (нов.) – "гений" Геннадий (стар.) – родовитый Георгий (стар.) – земледелец Герман (стар.) – родной Гертруд (нов.) - ГЕРой ТРУДа Глеб (стар., др.-руск.) – большой, высокий Гордей / Гордий (слав.) – гордый Горимир (слав.) – "светлый мир" Горислав (слав.) – "светлая слава" Гранит (нов.) – "твердый" Григорий (стар.) – не спящийРусские мужские имена на букву Д:Давыд / Давид (стар.) – любимый Дамир (нов.) – миролюбивый Дан (стар.) – бог луны Даниил / Данила / Данило / Данил (стар.) – "Божий суд" Дар (нов.) – "дар" Декабрий (нов.) – зимний Денис (нар. от стар. Дионисий) – бог жизненных сил природы Джеральд (нов.) - иное прочтение Гаральда Джозеф (нов.) - иное прочтение Жозефа, Иосифа, Осипа Джон (нов.) - иное прочтение Ивана Дионисий / Дионис (стар.) – бог растительности Дмитрий / Димитрий (стар.) – бог плодородия Добрыня (др.-рус.) – добрый молодец Дональт (стар.) – властелин мира Донат (стар.) – крепкийРусские мужские имена на букву Е:Евгений (стар.) – благородный Евдоким (стар.) – хорошо прославленный Егор (нар. от Георгий, Егорий) – земледелец Еруслан (др.-рус.) – "лев" Ефим (стар.) – благочестивыйРусские мужские имена на букву Ж:Ждан (др.-рус.) – ждущийРусские мужские имена на букву З:Захар (стар.) – "Божья память" Зиновий (стар.) – "Зевсова сила" Зорий (нов.) – утреннийРусские мужские имена на букву И:Ибрагим (нов.) - иное прочтение Абрама, Авраама, Аврома Иван (нар. от Иоанн) – "божий дар" Игнатий / Игнат (стар.) – неведомый Игорь (стар., др.-рус.) – защитник бога Исидор / Сидор (стар.) – покровитель плодородия Июлий (нов.) – летнийРусские мужские имена на букву К:Казимир (слав.) – объявляющий о мире Карл (нов.) – смелый Касьян (нар. от стар. Кассиан) – пустой Ким (нов.) - Коммунистический Интернационал Мира. Киприан (стар.) - уроженец Кипра или медный Кир (стар.) – господин Кирилл (стар.) – владыка Клавдий (стар.) – хромой или из рода Клавдиев Клемент (стар.) – милостивый Климент / Клим (стар.) – снисходительный Климентий / Клементий (нар. от Климент) – кроткий Колумбий (нов.) - "голубь" Кузьма / Козьма (нар. от стар. Косма) – украшенный Куприян (нар. от Киприан) - уроженец Кипра или медныйРусские мужские имена на букву Л:Лавр (стар.) – знаменитый Лаврентий (стар.) – увенчанный лаврами Лазарь (стар.) – "Божья помощь" Ларион (нар. от Иларион) – радостный Лев (стар.) – "лев" Леонард (нов.) - сильный Леонид (стар.) – сын льва Леонтий (стар.) – львиный Лука (стар.) – "счастье" Лукьян / Лукиан (стар.) – счастливый Любим (др.-рус.) – красавец Любомир (слав.) – любимец мира Люксен / Люциан (нов.) - светлыйРусские мужские имена на букву М:Маврикий (стар.) - черный Май (нов.) – теплое сердце Майслав / Маеслав (нов.) – прославившийся в мае Макар / Макарий (стар.) – счастливый Макс (нов.) – величавый Максим (стар.) – величавый Максимильян / Максимилиан (стар.) – величавый Милий (стар.) – милый Милонег (слав.) – милый Милослав (слав.) – слава мила Мир (нов.) – "мир" Мирон (стар.) – добрый Мирослав (слав.) – победитель Михаил / Михайло (стар.) – равный Богу Модест (стар.) – скромник Моисей (стар.) – извлеченный из воды Монолит (нов.) – незыблемыйРусские мужские имена на букву Н:Назар / Назарий (стар.) – посвященный Богу Натан (стар.) – дарованный Наум (стар.) – утешение Неон (стар.) – блистающий Неонил (стар.) – принципиальный Нестор / Нестер (стар.) – возвратившийся на родину Никандр (стар.) - победитель мужчин Норд (нов.) - север(ный)Русские мужские имена на букву О:Овидий (стар.) – спаситель Одиссей (нов.) – сердитий Октавиан (стар.) - (римское) - восьмой Октябрин (нов.) – осенний Октябрь (нов.) – осенний Олег (стар., др.-рус.) – святой Орест (стар.) – дикарь Осип (нар. от Иосиф) – приумноженный Оскар (стар.) – "Божье копьё"Русские мужские имена на букву П:Павел (стар.) – маленький Палладий (стар.) - посвященный Афине Палладе Пантелеймон / Пантелей (стар.) Панфил (стар.) - любящий всех Пересвет (др.-рус.) – светлый Пётр (стар.) – "скала" или "камень" Прохор (стар.) - руководитель хораРусские мужские имена на букву Р:Радий (нов.) - "радий" Радим (слав.) – родной Радислав (слав.) – рад славе Радомир (слав.) – рад мируРусские мужские имена на букву С:Савва / Сава (стар.) – желанный Савелий (стар.) – желанный Свет (нов.) – "свет" Светлан (слав.) – светлый Светозар (слав.) – светлый как заря Светослав (слав.) – "слава светла" Святогор (др.-рус.) - "святая гора" Святополк (др.-рус.) – "святой полк" Святослав (слав.) – "слава свята" Север (стар.) – "север" Северин (стар.) – холодный Северьян / Севериан (стар.) – северный Северян (нов.) – северный Семён (нар. от стар. Симеон) – услышанный Богом в молитве Серафим (стар.) – пламенный Сергей (стар.) – высокочтимый Сигизмунд (нов.) - … Сталь / Сталий (нов.) – твердый Станислав (слав.) – станет славным Степан / Стефан (стар.) – "венок"Русские мужские имена на букву Т:Тарас (стар.) – беспокойный Теймураз (нов.) - аналог Тимуру Тристан (стар.) - грустный (tristia) Трифон (стар.) – изнеженный Трофим (стар.) – питомецРусские мужские имена на букву Ф:Фадей / Фаддей (стар.) – "похвала" Февралин (нов.) – зимний Фёдор (стар.) – Божий дар Федор (стар.) – Божий дар Феликс (стар.) – преуспевающий Филимон (стар.) – любимый Филипп (стар.) – любящий лошадей Флегонт (стар.) - … Флорентий (стар.) – цветущий Флоренц (нов.) – цветущий Флорин (нов.) – цветущий Фрол (нар. от стар. Флор) – цветущийРусские мужские имена на букву Х:Харитон (стар.) – благодетель Храбр (др.-рус.) – храбрый Христоф (стар.) - (Христофор) - несущий ХристаРусские мужские имена на букву Э:Эдуард (нов.) – заботящийся о собственности Электрон (нов.) - янтарь Эльбрус (нов.) – "гора" Энергий (нов.) - энергичный Эрнест / Эрнст (нов.) – серьезныйЮвеналий (стар. от Иувеналий) - юный Юджин (нов.) – благородный Юлиан (стар. от Иулиан) – кудрявый Юлий (стар. от Иулий) – пушистый Юпитер (нов.) - "юпитер" Юрий (стар., нар. от Георгий) – земледелецРусские мужские имена на букву Я:Яков (стар. от Иаков) – подражающий Богу Ян (нов.) – "Бог солнца" Януарий (стар. от Ианнуарий) - январский Яромир (стар., слав.) – "солнечный мир" Ярополк (стар., слав.) – "солнечный" Ярослав (стар., слав.) – "горящая слава" или славящий Ярилу, древнеславянского бога

Русские женские имена на букву А:Августа / Августина (стар.) – летняя Авдотья (нар. от Евдокия) – прославившаяся Аврелия (нов.) - золотая Аврора (нов.) – богиня утренней зари Агапия (стар.) - от греч. агапао - люблю. Агата(нов.) / Агафья / Агафия (стар.) - от греч. агатос - хорошая, честная, добрая. Аглаида (стар.) – сверкающая / дочь красоты, прелести Аглая (нов.) – блестящая Агнеса / Агнесса (стар.) – целомудренная Агния (стар.) – непорочная или огненная Агриппина / Агрефена (стар.) - из римского родового имени Agrippus (Агриппа) Ада (стар.) – украшение Адель / Аделия / Аделаида (др.-герм.) - от адаль — благородный и хейд — состояние, сословие. Аза (стар.) – первая Азалия (нов.) - цветущий куст Аида (нов.) - дарующая урожай Акилина / Акулина (стар.) - орлиная Аксинья (нар.от Ксения) - гостеприимная или наоборот чужая ("ксенос") Алевтина (стар.) – чуждая дурного Александра (стар.) – защитница людей Алёна (нар. от Елена) – солнечная Алина (нов.) – чужая Алиса (нов.) – обаятельная Алла (стар.) – себялюбивая Альбина (стар., ср. нов. Альвина) – «белая» Анастасия (стар.) – воскресшая Анатолия (нов.) - восточная Ангелина (стар.) – ангелица Анжела (нов.) - ангельская Анимаиса (стар.) - душевная Анисия / Анисья (стар.) - сладко пахнущая Анита (нов.) - строптивая Анна (стар.) - «благодать» Антонина / Антонида (стар.) - добрая Антония (стар.) - вступающая в бой Анфиса / Анфуса (стар.) - цветущая Аполлинария (стар.) - богиня солнца Ариадна (стар.) - спящая Арина (нар. от Ирина) - спокойная Аркадия (нов.) - пастушка Арсения (нов.) - мужественная Артемия (стар.) - невредимая Астра (нов.) – «цветок» Астрид (сканд.) - страстная Афанасия (стар.) - бессмертная Афродита (стар.) - возникшая из морской пены Аэлита (нов.) - от греч. аэр - воздух и литос - камень Русские женские имена на букву Б:Бажена (др.-рус.) – святая Беата (нов.) – благословляющая Беатриса (стар.) – благословляющая Бела (слав.) – прекрасная Белла (нов.) – прекрасная Берта (нов.) – великолепная Богдана (слав.) – данная богом Болеслава (слав.) – более славная Борислава (слав.) – борющаяся за славу Бронислава (слав.) – славная защитницаРусские женские имена на букву В:Валентина (стар.) – здоровая Валерия (стар.) – сильная Ванда (слав.) – гостеприимная Варвара (стар.) – дикарка Василина (нов.) – царская Василиса (стар.) – царственная Васса (стар.) – царица Вацлава (слав.) - более славная Венера (стар.) – «любовь» Вера (стар.) – «вера» Вероника (стар.) – библейское имя Веселина (слав.) – жизнерадостная Веста (стар.) – покровительница домашн. очага Видана (слав.) – видная Викторина (стар.) – победительница Виктория (стар.) – «победа» Вилена (нов.) - от В.И.ЛЕНин Виола / Виолетта / Виоланта (нов.) – «фиалка» Виринея (стар.) - зеленеющая, свежая Виталия / Виталина (нов.) – жизненная Влада (слав.) – владеющая Владилена (нов.) - cокращение от «Владимир Ильич Ленин» Владимира (нов.) – владеющая миром Владислава (слав.) – владеющая славой Владлена (нов.) - аналогично Владилена Власта (слав.) – властительница Воля (нов.) – вольная Всеслава (слав.) – везде славнаяРусские женские имена на букву Г:Гайя (нов.) - супруга Гали (стар.) – яркая Галина (стар.) – спокойная Ганна (укр. нар. от Анна) – благодатная Гаяна / Гаяния (стар.) - от греч. ге — земля Гелена (нов. польск. от Елена) – светлая Гелия (нов.) – солнечная (Гелиос) Гелла (стар.) – упавшая в воду Гертруда (нов.) – покровительница женщин Глафира (стар.) – утонченная Гликерия (стар.) - сладкая Глория (стар.) – "слава" Голуба (др.-рус.) – нежная Горислава (слав.) – разжигающая славуРусские женские имена на букву Д:Дайна (нов.) - иное прочтение Дианы Дана (нов.) – богиня луны Дарья / Дария (стар.) – победительница Дарина (нов.) – дарящая Дарьяна (нов.) – победительница Декабрина (нов.) – зимняя Дея / Дия (нов.) - божественная Джульетта (стар.) - аналог Юлии Диана (нов.) - божественная Дина / Диния (нар. от стар. Дигна) – «вера» Диодора (стар.) - данная богом Дионисия (стар.) – покровительница виноделия Добрава (др.-рус.) – добрая Домна / Домина (стар.) - госпожа, хозяйка дома. Домника / Доминика (стар.) – принадлеж. Богу Дорофея / Доротея (стар.) - от греч. дорон - подарок, дар и теос - бог.Русские женские имена на букву Е:Ева (стар.) – подательница жизни Евгения (стар.) – благородная Евдокия (стар.) – хорошо прославленная Евпраксия (стар.) - делающая добрые дела, добродетельница Екатерина (стар.) – непорочная Елена (стар.) – избранная Елизавета (стар.) – почитающая Бога Ефимия / Евфимия (стар.) - благочестивая Ефросиния / Евфросиния (стар.) - от греч. эуфросине - радость, веселье.Русские женские имена на букву Ж:Жанна (нов.) – «дар Бога» Ждана (др.-рус.) – ждущаяРусские женские имена на букву З:Зарина / Зорина (нов.) – светлая Звенислава (слав.) – разносящая славу Зинаида (стар.) – рожденная Зевсом Зиновия (стар.) – «Зевсова сила» Злата (слав.) - золотая Зоя (стар.) – «жизнь»Русские женские имена на букву И:Иванна (нар. от Иоанна) – «божий дар» Ида (нов.) - горная, "потомок" Илария (стар.) - веселая Инга (нов.) - от др.-сканд. ингвио - имя бога изобилия. Инесса (нов.) – безмятежная Инна (стар.) – имя Рима / бурный поток Иоанна (стар.) – «божий дар» Иона (стар.) – «голубь» Ипатия (нов.) - имеющая отношение к лошадям, лошадиная (гиппос) Ипполита (нов.) – от "(г)иппо" - лошадь и "литос" - камень, плита Ираида (стар.) – богиня радуги Ироида (стар.) - героическая, дочь героя Ирина (стар.) – «мир» Исидора (стар.) – покровительница плодородия Искра (нов.) - яркая Ифигения (стар.) – бессмертная Ия (стар.) - от греч. иа - фиалкаРусские женские имена на букву К:Капитолина (стар.) - главная Каролина (нов.) - смелая Катерина (нар. от Екатерина) – непорочная Кира (стар.) – «госпожа» Кирилла (стар.) – владычица Клавдия (стар.) – хромая или из рода Клавдиев Клара (нов.) – ясная Клариса / Кларисса (нов.) – светлая Клеопатра (стар.) – красавица Конкордия (стар.) - согласная, соглашающаяся Констанция (стар.) – стойкая Кристина (нов.) – крещеная Ксения (стар.) - чужаяРусские женские имена на букву Л:Лада (др.-рус.) – милая Лариса (стар.) – «чайка» Лениана (нов.) - от Ленина Ленина (нов.) - от Ленина Леонида (стар.) – "потомок льва" Леонила (стар.) – львица Леонтия (нов.) – львиная Леся (нов.) – мужественная Ливия (стар.) - родом из Ливии Лидия (стар.) – первая Лилиана (нов.) – цветущая Лилия (нов.) – «цветок» Лина (нов.) – самостоятельное имя или уменьшительное от Элина Любава (др.-рус.) – красавица Любовь (стар.) – «любовь» Любомира (слав.) – любимица мира Людмила (стар., слав) – милая людямРусские женские имена на букву М:Мавра (стар.) - темнокожая, смуглянка Магда (нов.) - см. Магдалина Магдалина (стар.) – звучащая / родом из Магдалы, в Палестине Мадлен (нов.) - см. Магдалина Майя / Мая (нов.) – богиня весны Мальвина (др.-герм.) – От маль — справедливость и вин — друг.. Маргарита (стар.) – «жемчужина» Марина (стар.) – морская Мария / Марья (стар.) – горькая Мари (нов.) - вариант Марии Марта (нов.) – владычица Марфа (стар.) – наставница Матильда (др.-герм.) - от махт — сила и хильд — сражение. Матрёна / Матрона (стар.) - госпожа, мать семьи, матушка Мелания / Меланья (стар.) - темная, смуглая Милада (слав.) – добрая Милана / Милена / (слав.) – милая Милица (стар., слав.) – милая на лицо Милослава (слав.) – слава мила Мира (слав.) – мирная Мирра (слав.) – благовонная, благоухающая Мирослава (слав.) – победительница Митродора (гр.) - дар матери.
Млада (слав.) – молодая Мстислава (слав.) - завоевательница Муза (стар.) – богиня искусства / вдохновительница

Русские женские имена на букву Н:

Надежда (стар., слав.) – «надежда»
Надия (нар., от Надежда) – «надежда»
Нана (стар.) - нимфа Настасья (нар., от Анастасия) - воскресшая
Наталья / Наталия (стар.) – родная
Нелли (нов.) – молодая
Неонила (стар.) – принципиальная
Ника (стар.) – «богиня победы». Имя появилось от Богини победы Ники Самофракийской жившей в древней Греции.
Нина (стар.) – правительница
Нинель (нов.) - "Ленин" наоборот
Новелла (стар.) - новая
Нора (нов.) – холодная

Русские женские имена на букву О:

Оксана (укр. нар., от Ксения) – гостеприимная
Октавия (стар.) - восьмая
Октябрина (нов.) – осенняя
Олеся (укр.нар., от Александра) – мужественная
Олимпиада (стар.) – сохраняющая спокойствие
Олимпия (нов.) – названная в честь Зевса
Ольга (стар., др.-рус.) – святая

Русские женские имена на букву П:

Павла (стар.) – маленькая
Павлина (стар.) – красавица
Платонида (стар.) - потомок Платона
Поликсена (стар.) – троянская царевна
Полина (нов.) – предсказательница
Правдина (нов.) – честная
Прасковья (нар., от стар. Параскева) - "пятница"

Русские женские имена на букву Р:

Рада (стар., слав.) – приносящая радость
Радмила (слав.) – радостная
Раиса (стар.) – покорная
Ревмира (нов.) - РЕВолюционный МИР
Регина (стар.) – царица
Рената (нов.) - вновь родившаяся
Римма (стар.) – римлянка
Рогнеда (слав.) - допущенная в совет равных/совет мужчин
Роза (нов.) – «цветок»
Розалия (нов.) – цветущая
Розана (нов.) – цветочек
Ростислава (слав.) – растущая для славы
Руслана (нов.) – львица
Руфина / Руфь (стар.) - красная, рыжая

Русские женские имена на букву С:

Сабина / Савина (стар.) - из рода сабинов, сабинянка
Саломея / Соломея (стар.) – вариант имени Соломония, производного от имени Соломон - "благополучный"
Светлана (др.-рус.) – светлая
Светозара (слав.) – светлая заря
Светослава (нов.) – слава светла
Свобода (нов.) – «свобода» 
Святослава (слав.) – слава свята
Севастьяна (стар.) – "высокочтимая, священная", вариант мужского имени Севастьян
Северина (нов.) – северная
Селена / Селина (нов.) - луна
Серафима (стар.) – пламенная
Слава (слав.) – «слава»
Славяна (слав.) – славянка
Снежана (нов.) – холодная
Софья / София (стар.) – «мудрость»
Станислава (слав.) – стань славной
Стелла (стар.) – звезда
Степанида / Стефанида (стар.) – «венок»
Стефания (стар.) – «венок»
Сусанна / Сосанна (стар.) – упрямая/ от древнееврейского -"шушанах"-"белая лилия"
Сюзанна (нов.) – упрямая

Русские женские имена на букву Т:

Таира (нов.) – настойчивая
Таисия (стар.) - "богоугодница" и "любительница детей"
Тамара (стар.) – «смоковница»
Тамила / Томила (др.-рус.) – томящаяся
Татьяна (стар.) – учредительница

Русские женские имена на букву У:

Ульяна (нар., от стар. Иулиания, ср. Юлиана) Услада (нов.) – сладкоголосая
Устинья (нар., от стар. Иустина, ср. Юстина)

Русские женские имена на букву Ф:

Фаина (стар.) – сияющая
Феликсана (нов.) – преуспевающая
Фелицата / Фелицитата (стар.) – счастливая
Фелиция (стар.) – «счастье»
Федора / Феодора (стар.) – «Божий дар»
Феодосия / Феодосья (стар.) – землевладелица
Филадельфия (нов.) - любящая Дельфы
Флавия (стар.) - из рода Флавиев
Флора / Флория (нов.) – богиня цветов
Флорентина (нов.) – цветущая
Флоренция (нов.) - цветущая
Флориана (нов.) - юная или цветущая
Фотина (стар.) - по святцам Светлана

Русские женские имена на букву Х:

Харита (стар.) – богиня красоты
Харитина (стар.) – красавица
Хиония (стар.) – нимфа
Христина (стар., ср. нов. Кристина) - Христова

Русские женские имена на букву Ч:

Чеслава (слав.) – честная слава

Русские женские имена на букву Э:

Эвридика (нов.) – укушенная змеей
Элеонора (нов.) – сложная
Эльвира (нов.) – уравновешенная
Эльмира (нов.) – спокойная
Эльза (нов.) – мужественная
Эмма (нов.) – самокритичная
Эрика (нов.) – создательница храма

Русские женские имена на букву Ю:

Юлиана (стар., от Иулиания) – кудрявая
Юлия (стар., от Иулия) – пушистая
Юманита (нов.) - человечная, человеческая
Юнона (стар.) – покровительница брака

Русские женские имена на букву Я:

Ядвига (нов.) – богатая воительница
Яна (нов.) – «Богиня солнца»
Янина (нов.) – светлая
Яромира (слав.) – «солнечный мир»
Ярослава (слав.) – «горящая слава» или аналогично мужскому имени Ярослав
	
<hr>имена<hr>


Русские мужские имена на букву А:

Август (стар.) – летний
Августин (стар.) – летний
Авенир (стар.) - от франц. avenir - грядущий, будущий
Авксентий (стар.) - чужой "ксенос"
Аврор / Аврорий (нов.) – сын утренней зари
Адам (стар.) – "из красной глины"
Адонис (стар.) – владыка
Алевтин (нов.) – чуждый дурного
Александр (стар.) – защитник людей
Алексей (стар.) – защитник
Альберт (нов.) – мудрый
Альбин (нов.) – "белый"
Альфред (нов.) – хороший советник
Анастасий (стар.) – воскресший
Анатолий (стар.) – восточный
Андрей (стар.) – мужчина и защитник
Анис / Анисий (стар.) – сладко пахнущий
Антон / Антоний (стар.) – вступающий в бой
Антонин (стар.) – добрый
Антуан (нов.) - иноязычное прочтение Антона
Аполлинарий (стар.) – сын солнца
Аполлон (стар.) – бог солнца
Аргент (нов.) - от франц. argent - серебряный
Аристарх (стар.) – глава лучших
Аркадий (стар.) – пастух или "Житель Аркадии"
Арсен (нов.) – мужественный
Арсений (стар.) – мужественный
Артём / Артемий (стар.) – невредимый
Артур (нов.) – большой как медведь
Атеист (нов.) – не верующий
Афанасий (стар.) – бессмертный

Русские мужские имена на букву Б:

Бажен (др.-рус.) – святой
Бенедикт (стар.) – благословенный
Богдан (слав.) – данный богом
Боеслав (слав.) – прославленный в бою
Болеслав (слав.) – более славный
Боримир (слав.) – борющийся за мир
Борис (стар.) – "борец"
Борислав (слав.) – борющийся за славу
Бронислав (слав.) – славный защитник
Будимир (др.-рус.) – миролюбивый
Булат (нов.) – "крепкий"

Русские мужские имена на букву В:

Вадим (стар.) – сеющий смуту
Валентин (стар.) – здоровый
Валерий (стар.) – сильный 
Вальтер (нов.) – управляющий людьми
Василий (стар.) – царский
Василько (нар. от Василий) – царевич
Велимир (слав.) – повелитель мира
Велислав (слав.) – прославленный
Велор / Велорий (нов.) - состоятельный
Венедикт (стар.) - иное прочтение Бенедикта
Вениамин (стар.) – древнеевр. "младший"
Виктор (стар.) – победитель
Вилен (нов.) - сокращение от В.И.ЛЕНин
Виссарион (стар.) – лесной человек
Виталий (стар.) – жизненный
Витольд (слав.) – лесной властитель
Влад (слав.) – владеющий
Владилен (нов.) - аналогично ВЛАДИмир ЛЕНин
Владимир (стар., слав.) – владеющий миром
Владислав (стар., слав.) – владеющий славой
Владлен (нов.) - аналогично ВЛАДимир ЛЕНин
Воин (др.-рус.) – "воин"
Воислав (слав.) – "прославленный в войне"
Володар (старослав.) - "владыка"
Вольдемар / Вальдемар (нов.) – знаменитый властитель
Вольмир / Волемир (слав.) – повелитель мира
Всеволод (стар., др.-рус.) – властелин всего народа
Всемил (славв.) – всем мил
Вячеслав (стар., слав.) – не раз прославившийся

Русские мужские имена на букву Г:

Гавриил / Гаврила / Гаврило / Гаврил (стар.) – божественный воин
Галактион (стар.) – звездный
Гарри / Гаррий (нов.) – терпимый
Гелиан / Гелий (нов.) - солнечный
Гений (нов.) – "гений"
Геннадий (стар.) – родовитый
Георгий (стар.) – земледелец
Герман (стар.) – родной
Гертруд (нов.) - ГЕРой ТРУДа
Глеб (стар., др.-руск.) – большой, высокий
Гордей / Гордий (слав.) – гордый
Горимир (слав.) – "светлый мир"
Горислав (слав.) – "светлая слава"
Гранит (нов.) – "твердый"
Григорий (стар.) – не спящий

Русские мужские имена на букву Д:

Давыд / Давид (стар.) – любимый
Дамир (нов.) – миролюбивый
Дан (стар.) – бог луны
Даниил / Данила / Данило / Данил (стар.) – "Божий суд"
Дар (нов.) – "дар"
Декабрий (нов.) – зимний
Денис (нар. от стар. Дионисий) – бог жизненных сил природы
Джеральд (нов.) - иное прочтение Гаральда
Джозеф (нов.) - иное прочтение Жозефа, Иосифа, Осипа
Джон (нов.) - иное прочтение Ивана
Дионисий / Дионис (стар.) – бог растительности
Дмитрий / Димитрий (стар.) – бог плодородия
Добрыня (др.-рус.) – добрый молодец
Дональт (стар.) – властелин мира
Донат (стар.) – крепкий

Русские мужские имена на букву Е:

Евгений (стар.) – благородный
Евдоким (стар.) – хорошо прославленный
Егор (нар. от Георгий, Егорий) – земледелец
Еруслан (др.-рус.) – "лев"
Ефим (стар.) – благочестивый

Русские мужские имена на букву Ж:

Ждан (др.-рус.) – жданный, тот, которого ждут

Русские мужские имена на букву З:

Захар (стар.) – "Божья память"
Зиновий (стар.) – "Зевсова сила"
Зорий (нов.) – утренний

Русские мужские имена на букву И:

Ибрагим (нов.) - иное прочтение Абрама, Авраама, Аврома
Иван (нар. от Иоанн) – "божий дар"
Игнатий / Игнат (стар.) – неведомый
Игорь (стар., др.-рус.) – защитник бога
Исидор / Сидор (стар.) – покровитель плодородия
Июлий (нов.) – летний, рожденный в июле, середине лета, по летнему теплый и светлый

Русские мужские имена на букву К:

Казимир (слав.) – объявляющий о мире
Карл (нов.) – смелый
Касьян (нар. от стар. Кассиан) – пустой
Ким (нов.) - Коммунистический Интернационал Мира
Киприан (стар.) - уроженец Кипра или медный
Кир (стар.) – господин
Кирилл (стар.) – владыка
Клавдий (стар.) – хромой или из рода Клавдиев
Клемент (стар.) – милостивый
Климент / Клим (стар.) – снисходительный
Климентий / Клементий (нар. от Климент) – кроткий
Колумбий (нов.) - "голубь"
Кузьма / Козьма (нар. от стар. Косма) – украшенный
Куприян (нар. от Киприан) - уроженец Кипра или медный

Русские мужские имена на букву Л:

Лавр (стар.) – знаменитый
Лаврентий (стар.) – увенчанный лаврами
Лазарь (стар.) – "Божья помощь"
Ларион (нар. от Иларион) – радостный
Лев (стар.) – "лев"
Леонард (нов.) - сильный
Леонид (стар.) – сын льва
Леонтий (стар.) – львиный
Лука (стар.) – "счастье"
Лукьян / Лукиан (стар.) – счастливый
Любим (др.-рус.) – красавец
Любомир (слав.) – любимец мира
Люксен / Люциан (нов.) - светлый

Русские мужские имена на букву М:

Маврикий (стар.) - черный
Май (нов.) – теплое сердце
Майслав / Маеслав (нов.) – прославившийся в мае
Макар / Макарий (стар.) – счастливый
Макс (нов.) – величавый
Максим (стар.) – величавый
Максимильян / Максимилиан (стар.) – величавый
Милий (стар.) – милый
Милонег (слав.) – милый
Милослав (слав.) – слава мила Мир (нов.) – "мир"
Мирон (стар.) – добрый
Мирослав (слав.) – победитель
Михаил / Михайло (стар.) – равный Богу
Модест (стар.) – скромник
Моисей (стар.) – извлеченный из воды
Монолит (нов.) – незыблемый

Русские мужские имена на букву Н:

Назар / Назарий (стар.) – посвященный Богу
Натан (стар.) – дарованный
Наум (стар.) – утешение
Неон (стар.) – блистающий
Неонил (стар.) – принципиальный
Нестор / Нестер (стар.) – возвратившийся на родину
Никандр (стар.) - победитель мужчин
Норд (нов.) - север(ный)

Русские мужские имена на букву О:

Овидий (стар.) – спаситель
Одиссей (нов.) – сердитий
Октавиан (стар.) - (римское) - восьмой
Октябрин (нов.) – осенний
Октябрь (нов.) – осенний
Олег (стар., др.-рус.) – святой
Орест (стар.) – дикарь
Осип (нар. от Иосиф) – приумноженный
Оскар (стар.) – "Божье копьё"

Русские мужские имена на букву П:

Павел (стар.) – маленький
Палладий (стар.) - посвященный Афине Палладе
Пантелеймон / Пантелей (стар.)
Панфил (стар.) - любящий всех
Пересвет (др.-рус.) – светлый
Пётр (стар.) – "скала" или "камень"
Прохор (стар.) - руководитель хора

Русские мужские имена на букву Р:

Радий (нов.) - радостный, "радий"
Радим (слав.) – родной
Радислав (слав.) – рад славе
Радомир (слав.) – рад миру

Русские мужские имена на букву С:

Савва / Сава (стар.) – желанный
Савелий (стар.) – желанный
Свет (нов.) – "свет"
Светлан (слав.) – светлый
Светозар (слав.) – светлый как заря
Светослав (слав.) – "слава светла"
Святогор (др.-рус.) - "святая гора"
Святополк (др.-рус.) – "святой полк"
Святослав (слав.) – "слава свята"
Север (стар.) – "север"
Северин (стар.) – холодный
Северьян / Севериан (стар.) – северный
Северян (нов.) – северный
Семён (нар. от стар. Симеон) – услышанный Богом в молитве
Серафим (стар.) – пламенный
Сергей (стар.) – высокочтимый
Сигизмунд (нов.) - …
Сталь / Сталий (нов.) – твердый
Станислав (слав.) – станет славным
Степан / Стефан (стар.) – "венок"

Русские мужские имена на букву Т:

Тарас (стар.) – беспокойный
Теймураз (нов.) - аналог Тимуру
Тристан (стар.) - грустный (tristia)
Трифон (стар.) – изнеженный
Трофим (стар.) – питомец

Русские мужские имена на букву Ф:

Фадей / Фаддей (стар.) – "похвала"
Февралин (нов.) – зимний
Фёдор (стар.) – Божий дар
Федор (стар.) – Божий дар
Феликс (стар.) – преуспевающий
Филимон (стар.) – любимый
Филипп (стар.) – любящий лошадей
Флегонт (стар.) - …
Флорентий (стар.) – цветущий
Флоренц (нов.) – цветущий
Флорин (нов.) – цветущий
Фрол (нар. от стар. Флор) – цветущий

Русские мужские имена на букву Х:

Харитон (стар.) – благодетель
Храбр (др.-рус.) – храбрый
Христоф (стар.) - (Христофор) - несущий Христа

Русские мужские имена на букву Э:

Эдуард (нов.) – заботящийся о собственности
Электрон (нов.) - янтарь
Эльбрус (нов.) – "гора"
Энергий (нов.) - энергичный
Эрнест / Эрнст (нов.) – серьезный
Ювеналий (стар. от Иувеналий) - юный
Юджин (нов.) – благородный
Юлиан (стар. от Иулиан) – кудрявый
Юлий (стар. от Иулий) – пушистый
Юпитер (нов.) - "юпитер"
Юрий (стар., нар. от Георгий) – земледелец

Русские мужские имена на букву Я:

Яков (стар. от Иаков) – подражающий Богу
Ян (нов.) – "Бог солнца"
Януарий (стар. от Ианнуарий) - январский
Яромир (стар., слав.) – "солнечный мир"
Ярополк (стар., слав.) – "солнечный"
Ярослав (стар., слав.) – "горящая слава" или славящий Ярилу, древнеславянского бога

Русские женские имена на букву А:

Августа / Августина (стар.) – летняя
Авдотья (нар. от Евдокия) – прославившаяся
Аврелия (нов.) - золотая
Аврора (нов.) – богиня утренней зари
Агапия (стар.) - от греч. агапао - люблю
Агата(нов.) / Агафья / Агафия (стар.) - от греч. агатос - хорошая, честная, добрая
Аглаида (стар.) – сверкающая / дочь красоты, прелести
Аглая (нов.) – блестящая
Агнеса / Агнесса (стар.) – целомудренная
Агния (стар.) – непорочная или огненная
Агриппина / Агрефена (стар.) - из римского родового имени
Agrippus (Агриппа)
Ада (стар.) – украшение
Адель / Аделия / Аделаида (др.-герм.) - от адаль — благородный и хейд — состояние, сословие.
Аза (стар.) – первая
Азалия (нов.) - цветущий куст
Аида (нов.) - дарующая урожай
Акилина / Акулина (стар.) - орлиная
Аксинья (нар. от Ксения) - гостеприимная и в то же время чужая ("ксенос")
Алевтина (стар.) – чуждая дурного
Александра (стар.) – защитница людей
Алёна (нар. от Елена) – солнечная
Алина (нов.) – чужая
Алиса (нов.) – обаятельная Алла (стар.) – себялюбивая
Альбина (стар., ср. нов. Альвина) – «белая»
Анастасия (стар.) – воскресшая
Анатолия (нов.) - восточная
Ангелина (стар.) – ангелица
Анжела (нов.) - ангельская 
нимаиса (стар.) - душевная
Анисия / Анисья (стар.) - сладко пахнущая
Анита (нов.) - строптивая
Анна (стар.) - «благодать»
Антонина / Антонида (стар.) - добрая
Антония (стар.) - вступающая в бой
Анфиса / Анфуса (стар.) - цветущая
Аполлинария (стар.) - богиня солнца
Ариадна (стар.) - спящая
Арина (нар. от Ирина) - спокойная
Аркадия (нов.) - пастушка
Арсения (нов.) - мужественная
Артемия (стар.) - невредимая
Астра (нов.) – «цветок»
Астрид (сканд.) - страстная
Афанасия (стар.) - бессмертная
Афродита (стар.) - возникшая из морской пены
Аэлита (нов.) - от греч. аэр - воздух и литос - камень

Русские женские имена на букву Б:

Бажена (др.-рус.) – святая
Беата (нов.) – благословляющая
Беатриса (стар.) – благословляющая
Бела (слав.) – прекрасная
Белла (нов.) – прекрасная
Берта (нов.) – великолепная
Богдана (слав.) – данная богом
Болеслава (слав.) – более славная
Борислава (слав.) – борющаяся за славу
Бронислава (слав.) – славная защитница

Русские женские имена на букву В:

Валентина (стар.) – здоровая
Валерия (стар.) – сильная
Ванда (слав.) – гостеприимная
Варвара (стар.) – дикарка
Василина (нов.) – царская
Василиса (стар.) – царственная
Васса (стар.) – царица
Вацлава (слав.) - более славная
Венера (стар.) – «любовь»
Вера (стар.) – «вера»
Вероника (стар.) – библейское имя
Веселина (слав.) – жизнерадостная
Веста (стар.) – покровительница домашн. очага
Видана (слав.) – видная
Викторина (стар.) – победительница
Виктория (стар.) – «победа»
Вилена (нов.) - от В.И.ЛЕНин
Виола / Виолетта / Виоланта (нов.) – «фиалка»
Виринея (стар.) - зеленеющая, свежая
Виталия / Виталина (нов.) – жизненная
Влада (слав.) – владеющая
Владилена (нов.) - cокращение от «Владимир Ильич Ленин»
Владимира (нов.) – владеющая миром
Владислава (слав.) – владеющая славой
Владлена (нов.) - аналогично Владилена
Власта (слав.) – властительница
Воля (нов.) – вольная
Всеслава (слав.) – везде славная

Русские женские имена на букву Г:

Гайя (нов.) - супруга
Гали (стар.) – яркая
Галина (стар.) – спокойная
Ганна (укр. нар. от Анна) – благодатная
Гаяна / Гаяния (стар.) - от греч. ге — земля
Гелена (нов. польск. от Елена) – светлая
Гелия (нов.) – солнечная (Гелиос)
Гелла (стар.) – упавшая в воду
Гертруда (нов.) – покровительница женщин, герой труда
Глафира (стар.) – утонченная
Гликерия (стар.) - сладкая
Глория (стар.) – "слава"
Голуба (др.-рус.) – нежная
Горислава (слав.) – разжигающая славу

Русские женские имена на букву Д:

Дайна (нов.) - иное прочтение Дианы
Дана (нов.) – богиня луны
Дарья / Дария (стар.) – победительница
Дарина (нов.) – дарящая
Дарьяна (нов.) – победительница
Декабрина (нов.) – зимняя
Дея / Дия (нов.) - божественная
Джульетта (стар.) - аналог Юлии
Диана (нов.) - божественная
Дина / Диния (нар. от стар. Дигна) – «вера»
Диодора (стар.) - данная богом
Дионисия (стар.) – покровительница виноделия
Добрава (др.-рус.) – добрая
Домна / Домина (стар.) - госпожа, хозяйка дома
Домника / Доминика (стар.) – принадлеж. Богу
Дорофея / Доротея (стар.) - от греч. дорон - подарок, дар и теос - бог.

Русские женские имена на букву Е:

Ева (стар.) – подательница жизни
Евгения (стар.) – благородная
Евдокия (стар.) – хорошо прославленная
Евпраксия (стар.) - делающая добрые дела, добродетельница
Екатерина (стар.) – непорочная
Елена (стар.) – избранная
Елизавета (стар.) – почитающая Бога
Ефимия / Евфимия (стар.) - благочестивая
Ефросиния / Евфросиния (стар.) - от греч. эуфросине - радость, веселье

Русские женские имена на букву Ж:

Жанна (нов.) – «дар Бога»
Ждана (др.-рус.) – ждущая

Русские женские имена на букву З:

Зарина / Зорина (нов.) – светлая
Звенислава (слав.) – разносящая славу
Зинаида (стар.) – рожденная Зевсом
Зиновия (стар.) – «Зевсова сила»
Злата (слав.) - золотая
Зоя (стар.) – «жизнь»

Русские женские имена на букву И:

Иванна (нар. от Иоанна) – «божий дар»
Ида (нов.) - горная, "потомок"
Илария (стар.) - веселая
Инга (нов.) - от др.-сканд. ингвио - имя бога изобилия
Инесса (нов.) – безмятежная
Инна (стар.) – имя Рима / бурный поток
Иоанна (стар.) – «божий дар»
Иона (стар.) – «голубь»
Ипатия (нов.) - имеющая отношение к лошадям, лошадиная (гиппос)
Ипполита (нов.) – от "(г)иппо" - лошадь и "литос" - камень, плита
Ираида (стар.) – богиня радуги
Ироида (стар.) - героическая, дочь героя
Ирина (стар.) – «мир»
Исидора (стар.) – покровительница плодородия
Искра (нов.) - яркая
Ифигения (стар.) – бессмертная
Ия (стар.) - от греч. иа - фиалка

Русские женские имена на букву К:

Капитолина (стар.) - главная
Каролина (нов.) - смелая
Катерина (нар. от Екатерина) – непорочная
Кира (стар.) – «госпожа»
Кирилла (стар.) – владычица
Клавдия (стар.) – хромая или из рода Клавдиев
Клара (нов.) – ясная
Клариса / Кларисса (нов.) – светлая
Клеопатра (стар.) – красавица
Конкордия (стар.) - согласная, соглашающаяся
Констанция (стар.) – стойкая
Кристина (нов.) – крещеная
Ксения (стар.) - чужая

Русские женские имена на букву Л:

Лада (др.-рус.) – милая
Лариса (стар.) – «чайка»
Лениана (нов.) - от Ленина
Ленина (нов.) - от Ленина
Леонида (стар.) – "потомок льва"
Леонила (стар.) – львица
Леонтия (нов.) – львиная
Леся (нов.) – мужественная
Ливия (стар.) - родом из Ливии
Лидия (стар.) – первая
Лилиана (нов.) – цветущая
Лилия (нов.) – «цветок»
Лина (нов.) – самостоятельное имя или уменьшительное от Элина
Любава (др.-рус.) – красавица
Любовь (стар.) – «любовь»
Любомира (слав.) – любимица мира
Людмила (стар., слав) – милая людям

Русские женские имена на букву М:

Мавра (стар.) - темнокожая, смуглянка
Магда (нов.) - см. Магдалина
Магдалина (стар.) – звучащая / родом из Магдалы, в Палестине
Мадлен (нов.) - см. Магдалина
Майя / Мая (нов.) – богиня весны
Мальвина (др.-герм.) – От маль — справедливость и вин — друг..
Маргарита (стар.) – «жемчужина»
Марина (стар.) – морская
Мария / Марья (стар.) – горькая
Мари (нов.) - вариант Марии
Марта (нов.) – владычица
Марфа (стар.) – наставница
Матильда (др.-герм.) - от махт — сила и хильд — сражение
Матрёна / Матрона (стар.) - госпожа, мать семьи, матушка
Мелания / Меланья (стар.) - темная, смуглая
Милада (слав.) – добрая
Милана / Милена / (слав.) – милая
Милица (стар., слав.) – милая на лицо
Милослава (слав.) – слава мила
Мира (слав.) – мирная
Мирра (слав.) – благовонная, благоухающая
Мирослава (слав.) – победительница
Митродора (гр.) - дар матери.
Млада (слав.) – молодая
Мстислава (слав.) - завоевательница
Муза (стар.) – богиня искусства / вдохновительница

Русские женские имена на букву Н:

Надежда (стар., слав.) – «надежда»
Надия (нар., от Надежда) – «надежда»
Нана (стар.) - нимфа
Настасья (нар., от Анастасия) - воскресшая
Наталья / Наталия (стар.) – родная
Нелли (нов.) – молодая
Неонила (стар.) – принципиальная
Ника (стар.) – «богиня победы». Имя появилось от Богини победы Ники Самофракийской жившей в древней Греции.
Нина (стар.) – правительница
Нинель (нов.) - "Ленин" наоборот
Новелла (стар.) - новая
Нора (нов.) – холодная

Русские женские имена на букву О:

Оксана (укр. нар., от Ксения) – гостеприимная
Октавия (стар.) - восьмая
Октябрина (нов.) – осенняя
Олеся (укр.нар., от Александра) – мужественная
Олимпиада (стар.) – сохраняющая спокойствие
Олимпия (нов.) – названная в честь Зевса
Ольга (стар., др.-рус.) – святая

Русские женские имена на букву П:

Павла (стар.) – маленькая
Павлина (стар.) – красавица
Платонида (стар.) - потомок Платона
Поликсена (стар.) – троянская царевна
Полина (нов.) – предсказательница
Правдина (нов.) – честная
Прасковья (нар., от стар. Параскева) - "пятница"

Русские женские имена на букву Р:

Рада (стар., слав.) – приносящая радость
Радмила (слав.) – радостная
Раиса (стар.) – покорная
Ревмира (нов.) - РЕВолюционный МИР
Регина (стар.) – царица
Рената (нов.) - вновь родившаяся
Римма (стар.) – римлянка
Рогнеда (слав.) - допущенная в совет равных/совет мужчин
Роза (нов.) – «цветок»
Розалия (нов.) – цветущая
Розана (нов.) – цветочек
Ростислава (слав.) – растущая для славы
Руслана (нов.) – львица
Руфина / Руфь (стар.) - красная, рыжая

Русские женские имена на букву С:

Сабина / Савина (стар.) - из рода сабинов, сабинянка
Саломея / Соломея (стар.) – вариант имени Соломония, производного от имени Соломон - "благополучный"
Светлана (др.-рус.) – светлая
Светозара (слав.) – светлая заря
Светослава (нов.) – слава светла
Свобода (нов.) – «свобода» 
Святослава (слав.) – слава свята
Севастьяна (стар.) – "высокочтимая, священная", вариант мужского имени Севастьян
Северина (нов.) – северная
Селена / Селина (нов.) - луна
Серафима (стар.) – пламенная
Слава (слав.) – «слава»
Славяна (слав.) – славянка
Снежана (нов.) – холодная
Софья / София (стар.) – «мудрость»
Станислава (слав.) – стань славной
Стелла (стар.) – звезда
Степанида / Стефанида (стар.) – «венок»
Стефания (стар.) – «венок»
Сусанна / Сосанна (стар.) – упрямая/ от древнееврейского -"шушанах"-"белая лилия"
Сюзанна (нов.) – упрямая

Русские женские имена на букву Т:

Таира (нов.) – настойчивая
Таисия (стар.) - "богоугодница" и "любительница детей"
Тамара (стар.) – «смоковница»
Тамила / Томила (др.-рус.) – томящаяся
Татьяна (стар.) – учредительница

Русские женские имена на букву У:

Ульяна (нар., от стар. Иулиания, ср. Юлиана)
Услада (нов.) – сладкоголосая
Устинья (нар., от стар. Иустина, ср. Юстина)

Русские женские имена на букву Ф:

Фаина (стар.) – сияющая
Феликсана (нов.) – преуспевающая
Фелицата / Фелицитата (стар.) – счастливая
Фелиция (стар.) – «счастье»
Федора / Феодора (стар.) – «Божий дар»
Феодосия / Феодосья (стар.) – землевладелица
Филадельфия (нов.) - любящая Дельфы
Флавия (стар.) - из рода Флавиев
Флора / Флория (нов.) – богиня цветов
Флорентина (нов.) – цветущая
Флоренция (нов.) - цветущая
Флориана (нов.) - юная или цветущая
Фотина (стар.) - по святцам Светлана

Русские женские имена на букву Х:

Харита (стар.) – богиня красоты
Харитина (стар.) – красавица
Хиония (стар.) – нимфа
Христина (стар., ср. нов. Кристина) - Христова

Русские женские имена на букву Ч:

Чеслава (слав.) – честная слава

Русские женские имена на букву Э:

Эвридика (нов.) – укушенная змеей
Элеонора (нов.) – сложная
Эльвира (нов.) – уравновешенная
Эльмира (нов.) – спокойная
Эльза (нов.) – мужественная
Эмма (нов.) – самокритичная
Эрика (нов.) – создательница храма

Русские женские имена на букву Ю:

Юлиана (стар., от Иулиания) – кудрявая
Юлия (стар., от Иулия) – пушистая
Юманита (нов.) - человечная, человеческая
Юнона (стар.) – покровительница брака

Русские женские имена на букву Я:

Ядвига (нов.) – богатая воительница
Яна (нов.) – «Богиня солнца»
Янина (нов.) – светлая
Яромира (слав.) – «солнечный мир»
Ярослава (слав.) – «горящая слава» или аналогично мужскому имени Ярослав
	
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. Специфически в системе реализован функционал синонимов вызываемых команд. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня можно получить такими способами: `quote`, `цитата` или даже `"цитата дня"`<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>cd<hr>

Текущий каталог изменён на <strong style="color:lightgreen">/home/x-positive/srv/adeptx</strong>, узнать текущий каталог: <strong><em>pwd</em></strong>
<hr>cd user<hr>

Текущий каталог изменён на <strong style="color:lightgreen">/home/x-positive/srv/adeptx/user</strong>, узнать текущий каталог: <strong><em>pwd</em></strong>
<hr>touch test<hr>

1
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>pwd<hr>

Текущим какталогом сейчас является /home/x-positive/srv/adeptx/user
<hr>pwd<hr>

Текущим какталогом сейчас является /home/x-positive/srv/adeptx/user
<hr>pwd<hr>

Текущим какталогом сейчас является /home/x-positive/srv/adeptx/user
<hr>help<hr>

Добро пожаловать в Adeptx Driver! Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать больше о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта). Команды можно использовать в этой оболочке, а также вызывать в своих скриптах или программах. Для этого можно подлключать исполняемый файл команды в свои проекты через include_once/require_once (once, потому что там определяется функция, повторное обьявление которой приведет к ошибке) и затем вызвать функцию с соответствующим названием или же через встроенную команду run($command_name). Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при воде, однако рекомендуется всё же использовать действительно имя команд при вызове. Для начала работы, первое что можно сделать - зарегистрироваться: `reg $email $password`. Далее просто авторизовываться, когда это необходимо (открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную. Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...). Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только все они отрабатывают исключительно в вашем рабочем каталоге. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, так что обход этих ограничений доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных. Не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми. После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал. Специфически в системе реализован функционал синонимов вызываемых команд. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня можно получить такими способами: `quote`, `цитата` или даже `"цитата дня"`<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em> Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>help<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_userdb_$user_id` с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>echo 123;<hr>

1
<hr>echo asd<hr>

1
<hr>echo Hello World<hr>


<hr>echo "Hello World"<hr>


<hr>print Hello World<hr>

HelloWorld
<hr>print "Hello World"<hr>

Hello World
<hr>print "Hello \"Fucking'\" World"<hr>

Hello \"Fucking'\" World
<hr>output Hell<hr>

Hell
<hr>вывести Привет_мир!<hr>

Привет_мир!
<hr>echo trello!1 12<hr>


<hr>print trello!1 12<hr>

trello!112
<hr>source cat<hr>

RU: В текущем каталоге (см. `pwd`) не существует файла "cat" или он переименован, перемещен или скрыт настройками приватности. EN: File "" not exit.
<hr>source cat<hr>

RU: В текущем каталоге (см. `pwd`) не существует файла "cat.php" или он переименован, перемещен или скрыт настройками приватности. EN: File "" not exit.
<hr>print trello!1 12<hr>

trello!112
<hr>source cat<hr>

RU: В текущем каталоге (см. `pwd`) не существует файла "cmd/cat.php" или он переименован, перемещен или скрыт настройками приватности. EN: File "" not exit.
<hr>source cat<hr>


<hr>source cat<hr>

<?
	# Выводит содержимое всего файла
	# this function just put all file

	$fine_name  = str_replace(['../', '..'], '', $arg[1]);	# user see|put this address of file
	$real_file  = $fine_name;	# but realy file exist at home dir
	if (is_readable($real_file)) {
		$file = file_get_contents($real_file);
		return "$real_file:<br> $file";
	}
	return "RU: В текущем каталоге (см. `pwd`) не существует файла \"$fine_name\" или он переименован, перемещен или скрыт настройками приватности. EN: File \"$fine_name\" not exit."; // $msg['cmd']['cat']['file no exist'];
<hr>source cat<hr>

<?
	# Выводит содержимое всего файла
	# this function just put all file

	$fine_name  = str_replace(['../', '..'], '', $arg[1]);	# user see|put this address of file
	$real_file  = $fine_name;	# but realy file exist at home dir
	if (is_readable($real_file)) {
		$file = file_get_contents($real_file);
		return "$real_file:<br> $file";
	}
	return "RU: В текущем каталоге (см. `pwd`) не существует файла \"$fine_name\" или он переименован, перемещен или скрыт настройками приватности. EN: File \"$fine_name\" not exit."; // $msg['cmd']['cat']['file no exist'];
<hr>source cat<hr>

<?
	# Выводит содержимое всего файла
	# this function just put all file

	$fine_name  = str_replace(['../', '..'], '', $arg[1]);	# user see|put this address of file
	$real_file  = $fine_name;	# but realy file exist at home dir
	if (is_readable($real_file)) {
		$file = file_get_contents($real_file);
		return "$real_file:<br> $file";
	}
	return "RU: В текущем каталоге (см. `pwd`) не существует файла \"$fine_name\" или он переименован, перемещен или скрыт настройками приватности. EN: File \"$fine_name\" not exit."; // $msg['cmd']['cat']['file no exist'];
<hr>source cat<hr>

&lt;?
	# Выводит содержимое всего файла
	# this function just put all file

	$fine_name  = str_replace(['../', '..'], '', $arg[1]);	# user see|put this address of file
	$real_file  = $fine_name;	# but realy file exist at home dir
	if (is_readable($real_file)) {
		$file = file_get_contents($real_file);
		return &quot;$real_file:&lt;br&gt; $file&quot;;
	}
	return &quot;RU: В текущем каталоге (см. `pwd`) не существует файла \&quot;$fine_name\&quot; или он переименован, перемещен или скрыт настройками приватности. EN: File \&quot;$fine_name\&quot; not exit.&quot;; // $msg['cmd']['cat']['file no exist'];
<hr>help<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>source help<hr>

&lt;?
	$hotkeys['ru'] = [
		 'Esc'					=&gt; 'Очистить экран и строку ввода команд'
		,'Ctrl + Enter'			=&gt; 'Показать/скрыть окно ввода команд в котором вы сейчас находитесь'
		,'Enter'				=&gt; 'Отправить команду на сервер для выполнения (POST)'
		,'Ctrl + H'				=&gt; 'Показать это руководство'
	];
	$hotkeys['en'] = [
		 'Esc'					=&gt; 'Clear screen and input line'
		,'Ctrl + Enter'			=&gt; 'Toggle command window'
		,'Enter'				=&gt; 'Send command to server for processing (post method only)'
		,'Ctrl + H'				=&gt; 'Show this manual'
	];

	$commands['arguments'] = [
		 'help'			=&gt; '[$command]'
		,'auth'			=&gt; '$email $pass'
		,'reg'			=&gt; '$email $pass [$nickname]'
		,'exit'			=&gt; ''
		,'aliases'		=&gt; '$command'
		,'about'		=&gt; '[$command]'
		,'unreg'		=&gt; '$email $pass [$nickname]'
		,'epigraph'		=&gt; '[$id]'
		,'names'		=&gt; ''

		,'add'			=&gt; '$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]'
		,'cat'			=&gt; '$file'
		,'message'		=&gt; '$user $subject $message'
		,'tail'			=&gt; '$n $file'
		,'date'			=&gt; '[$format]'
		,'cal'			=&gt; '[$year]'
		,'get'			=&gt; '$obj $info'
		,'select'		=&gt; 'mail'
		,'cd'			=&gt; '[$dir]'
		,'pwd'			=&gt; ''
		,'ls'			=&gt; '[$dir]'
		,'tree'			=&gt; '[$dir]'
		,'source'		=&gt; '$command'
		,'rename'		=&gt; '$oldname $newname'
		,'copy'			=&gt; '$file $copyname'
		,'eval'			=&gt; '$code'
		,'chmod'		=&gt; '$file $mode.'
		,'zip'			=&gt; '$source_path $destination_path'
		,'unzip'		=&gt; '$source_archive $destination_path [$file1 $file2 $fileN]'
		,'history'		=&gt; ''
		,'create_backup'=&gt; ''
		,'dump'			=&gt; ''
		,'killallprocesses'=&gt; ''

		,'user'			=&gt; '$user_id $act $param'
		,'permission'	=&gt; '$user_id $key $value'
		,'group'		=&gt; ''
	];

	# язык первичен перед уровнем доступа. сначала определяется язык пользователя, затем его статус. (то что в приватбанковском corezoid названо состояниями давно было здесь реализовано и состояние языка определяется первично и в зависимости от языка этого процессы делятся по состояниям уровня доступа и так далее)
	# в зависимости от уровня доступа перечень комманд будет отличаться.

	$commands['summary']['ru']['ghost'] = [
		 'help'		=&gt; 'Вызов этой справки'
		,'auth'		=&gt; 'Авторизация в системе'
		,'reg'		=&gt; 'Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен'
		,'unreg'	=&gt; 'Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы'
		,'exit'		=&gt; 'Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff'
		,'aliases'	=&gt; 'Посмотреть все возможные синонимы (алиасы) команды'
		,'about'	=&gt; 'Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)'
		,'lang'		=&gt; 'Указать предпочтительный язык'
		,'epigraph'	=&gt; 'Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)'
		,'names'	=&gt; 'Выводит список мужских и женских русских имён'
	];
	$commands['summary']['en']['ghost'] = [
		 'help'		=&gt; 'This tutorial'
		,'auth'		=&gt; 'User authorization'
		,'reg'		=&gt; 'User registration'
		,'reg'		=&gt; 'User unregistration'
		,'exit'		=&gt; 'Sign out from site, session_destroy()'
		,'aliases'	=&gt; 'Get command aliases'
		,'about'	=&gt; 'Get command manual (alias for help)'
		,'lang'		=&gt; 'Set language'
		,'epigraph'	=&gt; 'Get random/$id-th epigraph'
		,'names'	=&gt; 'Output russian names'
	];

	$commands['summary']['ru']['staff'] = [
		 'add'		=&gt; 'Просто приведу примеры использования команды: `add hotkey &quot;Ctrl + V&quot; paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias &quot;my_alias_name&quot; for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)'
		,'cat'		=&gt; 'RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content'
		,'message'	=&gt; 'RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user'
#		,'tac $file'					=&gt; '$file get content from last line to first'	# from last line to first
#		,'more'							=&gt; 'RU: Намеченная утилита постраничного просмотра текстового файла. Синтаксис: more $file. $file get content page to page'	# must be page to page
#		,'less $file'					=&gt; '$file get content page to page and scroll'	# must be page to page and scoll top and bottom
#		,'head'							=&gt; 'RU: Выводит $n первых строк файла $file. Синтаксис: head $n $file. EN: Show $n first lines of $file (if $n more then file kept lines, show all file content)'
		,'tail'		=&gt; 'RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.'
#		,'_upload'						=&gt; 'upload files to the server. (post no command)'
#		,'_downoad'						=&gt; 'upload files to the server. (post no command)'
#		,'fa'							=&gt; 'RU: Добавляет строку $line в файл $file. Синтаксис: fa $file $line. append $line to $file ($line must no kept spaces now)'
#		,'_mail'						=&gt; 'send email to admin. (post no command)'
#		,'timezone [$from_UTC]'			=&gt; 'RU: Устанавливает часовой пояс (временную зону). Cинтаксис: timezone [$from_UTC]. EN: set your local timezone or set difference between UTC'
		,'date'		=&gt; 'RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date'
		,'cal'		=&gt; 'RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year'
		,'source'	=&gt; 'Выводит исходный код исполняемого файла программы'
		,'get'		=&gt; 'RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump'
		,'select'	=&gt; 'RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.'
#		,'calc'							=&gt; 'RU: Запускает калькулятор прямо в командной строке. Синтаксис: calc.'
#		,'default [$command]'			=&gt; 'return default settings of date, timezone etc'
#		,'site off'						=&gt; 'block site to view'
#		,'site on'						=&gt; 'unblock site to view'
		,'cd'		=&gt; 'RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]'
		,'pwd'		=&gt; 'RU: Выводит текущий каталог. EN: present working directory.'
		,'ls'		=&gt; 'RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options'
		,'tree'		=&gt; 'RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /'
#		,'mkdir'	=&gt; 'Syntax: mkdir $dir [$dir2 [$dir3]]. make $dir (or few dirs)'
#		,'rm, remove $file'				=&gt; 'remove file'
#		,'rmdir [$recursive]'			=&gt; 'remove empty dir or dir with all content'
		,'rename'		=&gt; 'RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname'
		,'copy'		=&gt; 'RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to'
#		,'find, whereis, which'			=&gt; 'search of files and dir'
		,'eval'		=&gt; 'Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);'
		,'chmod'						=&gt; 'Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.'
#		,'attr'							=&gt; 'files attributes'
		,'zip'		=&gt; 'RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.'
		,'unzip'	=&gt; 'RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*'
		,'killallprocesses'	=&gt; 'RU: Собственно, название говорит само за себя: принудительно завершает все процессы.'
		,'history'	=&gt; 'RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat ' . $site['cmd_log']
#		,'rpm'							=&gt; 'package manager'
#		,'yum'							=&gt; 'update manager'
#		,'dpkg'							=&gt; 'developer manager'
#		,'apt'							=&gt; ''
#		,'string'						=&gt; 'processing of strings'
#		,'array'						=&gt; 'processing of arrays'
#		,'file'							=&gt; 'processing of files'	# etc
		,'create_backup'	=&gt; 'RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.'
		,'dump'		=&gt; 'Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`'
#		,'shell'		=&gt; 'RU: прмой запуск произвольной команды терминала. Почему то не очень я заметил работу, только если shell echo...'
#		,'pid'			=&gt; 'pid, cloud, puddle. manipulate with clouds and puddle (processes)'
	];
	$commands['summary']['ru']['staff'] = array_merge($commands['summary']['ru']['ghost'], $commands['summary']['ru']['staff']);

	$commands['summary']['ru']['admin'] = [
		 'permission'	=&gt; 'Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id'
		,'user'			=&gt; 'Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.'
		,'group'		=&gt; 'Выполняет операции над пользовательскими группами'
	];
	$commands['summary']['en']['admin'] = [
		 'user'			=&gt; 'Manipulations of users'
		,'group'		=&gt; 'Manipulations of users group'
		,'permission'	=&gt; 'Manipulations of users permissions'
	];
	$commands['summary']['ru']['admin'] = array_merge($commands['summary']['ru']['staff'], $commands['summary']['ru']['admin']);

	if (!$arg[1]) {
		$return .= 'Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `&quot;цитата дня&quot;`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

&lt;em&gt;&lt;b&gt;Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\\&quot;) даже если перед этим стоит символ экранирования (что-то вроде: &quot;C:\\\\&quot; не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.&lt;/b&gt;&lt;/em&gt;

Приятной работы!';

		$return .=  &quot;\n\nПеречень доступных клавиатурных сочетаний и горячих клавиш в этом окне:\n\n&quot;;

		$return .= &quot;&lt;style&gt;.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }&lt;/style&gt;&quot;;
		$return .= &quot;&lt;table class=\&quot;help_table\&quot;&gt;&lt;tbody valign=\&quot;top\&quot;&gt;&quot;;
		$return .= &quot;&lt;tr style=\&quot;color:green\&quot;&gt;&lt;td&gt;&lt;b&gt;Сочетание&amp;nbsp;клавиш&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Действие&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot;;
		foreach ($hotkeys[ $_SESSION['lang'] ] as $hotkey =&gt; $description) {
			$return .= &quot;&lt;tr&gt;&lt;td&gt;$hotkey&lt;/td&gt;&lt;td&gt;$description&lt;/td&gt;&lt;/tr&gt;&quot;;
		}
		$return .= &quot;&lt;/tbody&gt;&lt;/table&gt;&quot;;

		$return .=  &quot;\nПеречень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):\n\n&quot;;

		ksort($commands['summary']['ru'][ $_SESSION['status'] ]);

		# после выхода стираются все данные сессии, однако при новом запросе status устанавливается в ghost
		$return .= &quot;&lt;table class=\&quot;help_table\&quot;&gt;&lt;tbody valign=\&quot;top\&quot;&gt;&quot;;
		$return .= &quot;&lt;tr style=\&quot;color:green\&quot;&gt;&lt;td&gt;&lt;b&gt;Имя&amp;nbsp;скрипта&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Параметры&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;Краткое&amp;nbsp;описание&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&quot;;
		foreach ($commands['summary'][ $_SESSION['lang'] ][ $_SESSION['status'] ] as $command =&gt; $description) {
			$arguments = $commands['arguments'][$command];
			$return .= &quot;&lt;tr&gt;&lt;td&gt;$command&lt;/td&gt;&lt;td&gt;$arguments&lt;/td&gt;&lt;td&gt;$description&lt;/td&gt;&lt;/tr&gt;&quot;;
		}
		$return .= &quot;&lt;/tbody&gt;&lt;/table&gt;&quot;;
	} else {
		$return .= &quot;Справка по команде ${arg[1]}: &quot; . $commands['summary'][ $_SESSION['lang'] ][ $_SESSION['status'] ][ $arg[1] ];
	}

	return $return;
<hr>source ls<hr>

&lt;?
	// $handler['ls'] = [
	// 	 'name'			=&gt; 'ls'
	// 	,'version'		=&gt; '0.2'
	// 	,'summary'		=&gt; 'list directory contents'
	// 	,'syntax'		=&gt; 'ls [OPTIONS] [FILES]'
	// 	,'description'	=&gt; 'there no manual for this script yet...'
	// 	,'author'		=&gt; 'Written by Evgeny Grinec aka x-positive @ Adeptx, Inc.'
	// 	,'callback'		=&gt; 'E-mail: e.grinec@gmail.com'
	// 	,'copyright'	=&gt; 'Copyright © 2015 Adeptx, Inc. License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.'
	// 	,'run'			=&gt; function($arguments) use ($handler) {
	// 	include_once 'handler/output.php';

	/**
	* Выводит перечень директорий и файлов которые находятся по указанному адресу в алфавитном порядке
	* @param string $source - директория, содержимое которой необходимо вывести
	* @return string $return - список файлов и папок, каждый с новой строки
	*/

	return ls($arg[1]);

	function ls($source) {
		if (!$source) $source = './';
		$source = str_replace('\\', '/',  $source);
		if (substr($source, -1) != '/') {
			$source .= '/';
		}

		if (file_exists($source)) {
			if (is_dir($source)) {
				if ($source == './') $return = &quot;Содержимое текущей директории:\n\n&quot;;
				else $return = &quot;Содержимое директории \&quot;$source\&quot;:\n\n&quot;;

				foreach (glob(&quot;$source*&quot;, GLOB_MARK | GLOB_NOESCAPE) as $file_name) {
					$file_name = str_replace('\\', '/',  $file_name);
					$return .= $file_name . &quot;\n&quot;;
				}
				return $return;
			}
			throw new Exception(&quot;&lt;strong style=\&quot;color:orange\&quot;&gt;Путь является файлом, а не директорией; вывод вложенных файлов и директорий неприменим.&lt;/strong&gt;&quot;);
		}
		throw new Exception(&quot;&lt;strong style=\&quot;color:red\&quot;&gt;Указанного пути не существует!&lt;/strong&gt;&quot;);
	}

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>ii Привет!<hr>

Привет!
<hr>ii Как дела?<hr>

Как
<hr>ii Долго думаЛ?<hr>

Долго
<hr>ii Понятно)<hr>

Понятно)
<hr>ii Давай общаться<hr>

Давай
<hr>ii Сколько времени<hr>

Сколько
<hr>ii Я хочу с тобой поговорить<hr>

Я
<hr>ii Давай дружить<hr>

Давай
<hr>ii Давай дружить<hr>

Давай
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>...<hr>


<hr>aliases help<hr>

about|man|info|штащ|ьфт|рудз|manual|про|о|об|?|tutorial|hotkeys|keys|reference|inquiry|enquiry|помощь|справка|руковоство|мануал|мануэль|мануил|эмануэль|исмаил|измаил|иммануил|ман|мэн|чаво|faq|факью|omg|motherofgod|godhelpme|helpme|sos|introduce
<hr>`1@#$%^&*()__~!@#$%^&*()_+<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>{}|:"<>?,./;'[]\-=_+)(*&^%$#@!~/*-+.<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>`cmd`<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы. Если Синтаксис: unzip $array $destination ($fileN )*</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>.*<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>Привет!<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>ii Hi!<hr>

Hi!
<hr>ii привет<hr>

привет
<hr>давай общаться<hr>

Справка по команде общаться: 
<hr>ii давай общаться<hr>

давай
<hr>ii гоу в кс<hr>

гоу
<hr>ii да кстати, ты робот?<hr>

да
<hr>ii не_,_а_тебя не смущает, что я человек а ты робот?<hr>

не_,_а_тебя
<hr>и меня нет<hr>

Справка по команде меня: 
<hr>iiи меня нет<hr>

Справка по команде меня: 
<hr>ii и меня нет<hr>

и
<hr>ii эмм, ну я подумал, может это важно<hr>

эмм,
<hr>ладно не думал что можешь так отреагировать<hr>

Справка по команде не: 
<hr>ii ладно не думал что можешь так отреагировать<hr>

ладно
<hr>ii давай ччто ли фильм посмотрим<hr>

давай
<hr>ii ну предложи какой нибудь что ли<hr>

ну
<hr>ii ладно сам подберу<hr>

ладно
<hr>ii да будет свет подойдёт<hr>

да
<hr>ii подойдёт фильм "убица моей матери"?<hr>

подойдёт
<hr>ii тут что ещё и искуственный интеллект есть?<hr>

тут
<hr>ii ну абалдеть аще))<hr>

ну
<hr>так круто<hr>

Справка по команде круто: 
<hr>ii так круто<hr>

так
<hr>ii хочу секса )))<hr>

хочу
<hr>ii хочу секса, скажи что хочешь меня<hr>

хочу
<hr>ii вахахаха<hr>

вахахаха
<hr>ii я гений создавший искусственный интеллект из одной строки кода!!!<hr>

я
<hr>ii нет я!<hr>

нет
<hr>ii да<hr>

да
<hr>ну даёшь<hr>

Справка по команде даёшь: 
<hr>ii ну даёшь<hr>

ну
<hr>цитата<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>"цитата дня"<hr>

Nothing is particularly hard if you divide it into small jobs.
<hr>цитата<hr>

Мой секрет успеха заключается в умении понять точку зрения другого человека и смотреть на вещи и с его и со своей точек зрения.
<hr>цитата<hr>

Более одаренные люди ведут общество вперед, облегчая остальным условия жизни.
<hr>"цитата дня" 5<hr>

Всё можно сделать лучше, чем делалось до сих пор.
<hr>цитата<hr>

Nothing is particularly hard if you divide it into small jobs.
<hr>цитата<hr>

Время не любит, когда его тратят впустую.
<hr>"цитата дня" 5<hr>

Всё можно сделать лучше, чем делалось до сих пор.
<hr>цитата<hr>

Если у тебя есть энтузиазм, ты можешь совершить всё, что угодно. Энтузиазм — это основа любого прогресса.
<hr>цитата<hr>

Мой секрет успеха заключается в умении понять точку зрения другого человека и смотреть на вещи и с его и со своей точек зрения.
<hr>цитата<hr>

Всё можно сделать лучше, чем делалось до сих пор.
<hr>цитата<hr>

Женщина — это не только вагон удовольствий, но и три, а то и четыре тонны проблем.
<hr>цитата<hr>

Гораздо больше людей сдавшихся, чем побежденных.
<hr>цитата<hr>

Когда кажется, что весь мир настроен против тебя, помни, что самолёт взлетает против ветра.
<hr>...<hr>


<hr>.......<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>.<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>..<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>...<hr>


<hr>.......<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>.........<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>.........<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>.........<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>............<hr>Array
<hr>aliases<hr>

Array
<hr>aliases 1<hr>

Для команды `1` не обнаружено псевдонимов (возможно введеная вами команда сама является псевдонимом?). Если введённое вами имя вообще соответствует реальному имени существующей команды, а не её пседвониму, это означает, что эта команда работает только по прямому имени. Вы можете создать новый псевдоним вручную добавив запись в файл cmd/aliases.php или командой `add alias 1 `
<hr>wsd<hr>Array
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>help<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>help<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>help<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>help<hr>

Добро пожаловать в Adeptx Driver!

Этот туториал призван помочь вам сориентироваться на самом начальном этапе. Ниже приведён список самых основных команд, с кратким описанием предназначения скрипта. Чтобы унать информацию о конкретной команде есть команда `about $command_name` (где $command_name = имя скрипта, например `about aliases`).

Команды можно использовать как прямо в этой оболочке, так и вызывать в своих скриптах или программах через встроенную команду run($command_with_arguments_string) или подлключив исполняемый файл команды в свои проекты через include_once/require_once (once - потому что в этом файле объявляется функция, повторное обьявление приведет к ошибке), после подключения в любое удобное время вызвав функцию с соответствующим названием.

Многие команды имеют синонимы для того, чтобы упростить запоминание и уменьшить количество ошибок при вводе. Однако рекомендуется всё же использовать оригинальное имя команды при вызове, это поможет избежать некоторых возможных недочетов.

Для начала работы, первое что можно сделать - зарегистрироваться. Для этого выполните `reg $email $password`. После регистрации вы будете автоматически авторизованы. В дальнейшем вам необходимо будет авторизовываться самостоятельно используя команду `auth $login $password`, когда это необходимо (при открытии сайта на новом устройстве, истечения срока дейтсвия сессий и т.п.; $login это ваш $email или $nickname указанные при регистрации или позже) для того чтобы вытянуть из базы данных информацию о сессии и всё что связано с персонализацией системы и получить больше возможностей для выполнения команд. Всё, что необходимо запомнить о сессии и вашем профиле будет записываться в базу данных по возможности или вы можете обращаться к базе данных вручную.

Каждый пользователь получает в распоряжение свою собственную базу данных `adeptx_user$USERID_customdb` (для доступа к ней вам не придётся указывать всё это, вы можете обращаться к ней через ~ или вообще не упоминая, по умолчанию всегда подразумевается, что вы обращаетесь в этой базе данных, если из контекста не следует иное) с персональными таблицами и полный доступ к своей базе данных. Кроме того, предоставленный доступ к публичным базам данных позволяет обращаться к расшаренным таблицам и другим пользователям (по установленным правилам: только для чтения или чтение и запись...).
Также дела обстоят и с файлами, каждый пользователь получает в распоряжение свою папку и так далее. Кроме того в вашем распоряжении общий репозиторий файлов и скриптов, вы можете добавлять в него свои удачные скрипты, выкладывая их в общий доступ, помогая другим своими разработками. Также для выполнения доступны многие команды linux-терминала, только выполнение всех этих функций ограничено только вашим рабочим каталогом выделенной вам базой данных, за исключением комманд обращения к общедоступным директориям и базам, в частности репозиторию. Пытаясь достучаться до каталогов более высокого уровня через ../ вы получите ошибку безопасности. Разумеется, при таком наборе функциональности, ни о какой безопасности не может идти и речи, хоть мы и стараемся максимально свести на нет возможные уязвимости. Так что обход этих ограничений тем или иным методом всё равно доступен, но помните, что подобное поведение вредит другим пользователям, поэтому за проделки вы будете забанены с удалением всех ваших данных.
Вот поэтому не забывайте делать бекапы своих данных и сохранять их в безопасном от уязвимостей месте, повышать разными средствами безопасность данных и делясь своими наработками в области безопасности данных со всеми.

После того, как вы авторизуетесь, вызовите это окно снова, чтобы увидеть перечень доступных вам команд, поскольку сейчас вы видите только список команд, доступных для всех посетителей, авторизованные пользователи имеют более широкий функционал.

Отдельно хочу отметить специфическую реализацию в системе функционала синонимов вызываемых команд, а кое-какие из них даже имеют синтаксический сахар. Попробуйте посмотреть на синонимы разных команд (`aliases $cmd`, например `aliases help`) и вы сами всё поймёте. Например, цитату дня, которая используется в качестве эпиграфа, можно получить такими способами: `epigraph`, `quote`, `цитата` или даже `"цитата дня"`. Если вы создадите или возьмете из репозитория исполняемый файл с названием, которое уже имеется в списке псевдонимов, то псевдоним будет проигнорирован, будет выполнена команда имеющая исполняемый файл со своим именем. Так что ни один псевдоним не может перезаписать название реальной функции и подменить оригинал, help всегда останется help-ом. Для того, чтобы изменить функционал по умолчанию для существующей команды нужно будет ковырять файлы программы.

<em><b>Будьте бдительны, в строках реализован только учёт двойных кавычек, ни одинарные ни косые кавычки не учитываются как символы для объединения выражения, и строка не может завершаться эрканирующим символом перед кавычкой (\") даже если перед этим стоит символ экранирования (что-то вроде: "C:\\" не сработает, нужен хотя бы пробел в конце строки). Кроме того у eval и shell несколько специфическая интерпретация введённых команд, двойные кавычки могут чудесным образом вырезаться там, где это не должно происходить. Довести эти моменты до ума находится в первоочередных задачах, когда это произойдёт данное уведомление исчезнет.</b></em>

Приятной работы!

Перечень доступных клавиатурных сочетаний и горячих клавиш в этом окне:

<style>.help_table td {padding: 5px 10px;} .help_table tr:nth-child(2n) {background-color:rgba(255,255,255,0.05);} .help_table, .help_table * { box-sizing: border-box; } .help_table { max-width: 51em;
    box-sizing: border-box;
    font-size: 13px; }</style><table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Сочетание&nbsp;клавиш</b></td><td><b>Действие</b></td></tr><tr><td>Esc</td><td>Очистить экран и строку ввода команд</td></tr><tr><td>Ctrl + Enter</td><td>Показать/скрыть окно ввода команд в котором вы сейчас находитесь</td></tr><tr><td>Enter</td><td>Отправить команду на сервер для выполнения (POST)</td></tr><tr><td>Ctrl + H</td><td>Показать это руководство</td></tr></tbody></table>
Перечень всех доступных скриптов (в квадратных скобках указываются необязательные параметры):

<table class="help_table"><tbody valign="top"><tr style="color:green"><td><b>Имя&nbsp;скрипта</b></td><td><b>Параметры</b></td><td><b>Краткое&nbsp;описание</b></td></tr><tr><td>about</td><td>[$command]</td><td>Посмотреть справку по конкретному скрипту (на самом деле это псевдоним команды help)</td></tr><tr><td>add</td><td>$arg1 $arg2 $arg3 [$arg4] [$arg5] [$arg6]</td><td>Просто приведу примеры использования команды: `add hotkey "Ctrl + V" paste`, `add hotkey Ctrl+L ls`, `add alias pro about`, `add user test@test.com qwerty123`. Данная команда первая и пока единственная оснащена синтаксическим сахаром (можно ввести `add new alias "my_alias_name" for command help` или `add user alex with password qwerty321` и несколько ещё вариантов в том же духе)</td></tr><tr><td>aliases</td><td>$command</td><td>Посмотреть все возможные синонимы (алиасы) команды</td></tr><tr><td>auth</td><td>$email $pass</td><td>Авторизация в системе</td></tr><tr><td>cal</td><td>[$year]</td><td>RU: Выводит календарь на $year год (по умолчанию на текущий год). EN: show calendar on YYYY year</td></tr><tr><td>cat</td><td>$file</td><td>RU: Вывести содержимое файла. Синтаксис: cat $file. EN: print $file content</td></tr><tr><td>cd</td><td>[$dir]</td><td>RU: Устанавливает $dir текущей директорией. Если $dir не указана делает текущим корневой каталог (каталог, в который установлен движок). Синтаксис: cd [$dir]. Посмотреть текущий каталог можно командой pwd. EN: go to home dir or change dir to [..|../..|-|/dir|dir/dir|~user]</td></tr><tr><td>chmod</td><td>$file $mode.</td><td>Осуществляет попытку изменения режима доступа файла $file на режим $mode. Синтаксис: chmod $file $mode.</td></tr><tr><td>copy</td><td>$file $copyname</td><td>RU: Создаёт копию файла $file с именем $copyname. Не забывайте, что второй параметр содержит не только путь, куда сохранить копию файла, но и содержит новое имя создаваемой копии! Синтаксис: copy $file $copyname. EN: copy file $from to file $to</td></tr><tr><td>create_backup</td><td></td><td>RU: Создает в папке backups архив с дампом базы и файлами всего сайта (полный бекап), после создания архив отправляет на скачивание.</td></tr><tr><td>date</td><td>[$format]</td><td>RU: Выводит текущую дату, время и часовой пояс (селектором, позволяющим его изменить) в заданном формате. Синтаксис: date [$format]. EN: Show current date and time or set the $format of date</td></tr><tr><td>dump</td><td></td><td>Создание дампа текущей базы данных. Дамп создаётся в текущем каталоге. Просмотр содержимого последнего созданного дампа: `get last dump`. Создание дампа с просмотром содержимого в консоли: `get new dump`</td></tr><tr><td>epigraph</td><td>[$id]</td><td>Выводит случайную цитату или цитату с номером $id (для использования в качестве эпиграфа, но впринципе не только)</td></tr><tr><td>eval</td><td>$code</td><td>Временное решение нехватки функционала путём дыры в уязвимости - все недостающие команды можно выполнить через eval. Но при каждом применении не забывайте создать скрипт, который решает ту же задачу и тогда нехватка функционала быстро ликвидируется и можно будет не прибегать к прямому выполнени кода, достаточно будет использовать внутренне API. Подсказака: можно использовать eval также в качестве калькулятора, достаточно начать ввод с eval echo и можно писать любую математическую операцию на PHP, например: eval echo pow(398/4, 2);</td></tr><tr><td>exit</td><td></td><td>Обратный авторизации процесс, переход в режим стороннего наблюдателя (ghost-статус. Всего на сайте сейчас три статуса: ghost, staff, admin. Неавторизованные пользователи имеют статус ghost, авторизованные staff или admin, разница между которыми лишь в том, что admin может выполнять действия с профилями участников staff</td></tr><tr><td>get</td><td>$obj $info</td><td>RU: Выводит запрошенную информацию $info об объекте $obj. Синтаксис: get $obj $info. Примеры: get my nickname, get my status, get my email, get my id, get new dump, get last dump</td></tr><tr><td>group</td><td></td><td>Выполняет операции над пользовательскими группами</td></tr><tr><td>help</td><td>[$command]</td><td>Вызов этой справки</td></tr><tr><td>history</td><td></td><td>RU: Выводит историю всех введённых команд всеми пользователями. Позже будут добавлены параметры и проверки, чтобы выводить для указанного/текущего пользователя. Из списка удаляются дубли команд, пустые строки, некорректные команды записываются в отдельный лог и не выводятся здесь. Все команды сортируются и выводится первое вхождение команды, если требуется посмотреть историю без изменений, вводите cat cmd/history</td></tr><tr><td>killallprocesses</td><td></td><td>RU: Собственно, название говорит само за себя: принудительно завершает все процессы.</td></tr><tr><td>lang</td><td></td><td>Указать предпочтительный язык</td></tr><tr><td>ls</td><td>[$dir]</td><td>RU: Выводит список файлов и папок в директории $dir (если не указано, то содержимое текущей директории). Синтаксис: ls [$dir] EN: Show content of current dir with some $regular expression or options</td></tr><tr><td>message</td><td>$user $subject $message</td><td>RU: Отправляет письмо пользователю $user с темой $subject. Синтаксис: message $user $subject $message. Отправленное письмо может быть прочитано любым ридером из репозитория. EN: send message to $user</td></tr><tr><td>names</td><td></td><td>Выводит список мужских и женских русских имён</td></tr><tr><td>permission</td><td>$user_id $key $value</td><td>Устанавливает параметр доступа $key в значение $value для пользователя с ID $user_id</td></tr><tr><td>pwd</td><td></td><td>RU: Выводит текущий каталог. EN: present working directory.</td></tr><tr><td>reg</td><td>$email $pass [$nickname]</td><td>Регистрация нового пользователя, некорректная запись email воспринимается как nickname, при этом символ @ вырезается, если он был включен</td></tr><tr><td>rename</td><td>$oldname $newname</td><td>RU: Пытается переименовать файл или директорию $oldname в $newname, переместив в конечную директорию, если необходимо. Если $newname существует, то он будет перезаписан. Синтаксис: rename $oldname $newname. EN: rename $oldname to $newname</td></tr><tr><td>select</td><td>mail</td><td>RU: Команда для получения данных из БД. На данный момент полный функционал не реализован, стоит плашка select mail для выборки LIMIT 50 последних непрочитанных писем.</td></tr><tr><td>source</td><td>$command</td><td>Выводит исходный код исполняемого файла программы</td></tr><tr><td>tail</td><td>$n $file</td><td>RU: Выводит $n последних строк файла $file. Синтаксис: tail $n $file. show $n last lines of $file.</td></tr><tr><td>tree</td><td>[$dir]</td><td>RU: Выводит дерево файлов и каталогов в директории $dir. Синтаксис: tree [$dir]. EN: show files tree from /</td></tr><tr><td>unreg</td><td>$email $pass [$nickname]</td><td>Удалить свою учётную запись пользователя, требуется указать свой пароль также как и при регистрации/авторизации. Польностью удаляет все данные пользователя из системы</td></tr><tr><td>unzip</td><td>$source_archive $destination_path [$file1 $file2 $fileN]</td><td>RU: Распаковывает содержимое архива pwd().$zip_archive.zip в директорию pwd().$destination (по умолчанию текущая директория). Если указаны дополнительные параметры $file1, $file2..$fileN то распакует только перечисленные файлы.</td></tr><tr><td>user</td><td>$user_id $act $param</td><td>Выполняет действие $act с пользователем $user_id. Позволяет выполнить блокировку пользователей, удалять пользователей, менять их профили и т.п.</td></tr><tr><td>zip</td><td>$source_path $destination_path</td><td>RU: Создает в произвольной директории архив из заданного файла или директории, после создания архив отправляет на скачивание. Известный баг: архив создается корректно из файла, но из папки создаётся пустой архив.</td></tr></tbody></table>
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>pwd<hr>

Текущим какталогом сейчас является /home/x-positive/srv/adeptx/user
<hr>cd<hr>

Текущий каталог изменён на <strong style="color:lightgreen">/home/x-positive/srv/adeptx</strong>, узнать текущий каталог: <strong><em>pwd</em></strong>
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>get my status<hr>

admin
<hr>get my status<hr>

admin
<hr>get my status<hr>

admin
<hr>get my status<hr>

admin
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>get my status<hr>

admin
<hr>get my status<hr>

admin
<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>get my status<hr>

admin
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>get my status<hr>

admin
<hr>get my status<hr>

admin
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>get my status<hr>

admin
<hr>get my status<hr>

admin
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>hello<hr>

Добро пожаловать в Adeptx Driver, x-positive!

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>exit<hr>

$msg_exit_success
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>get my id<hr>

1
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>exit<hr>

$msg_exit_success
<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>select mail<hr>

Последние непрочитанные сообщения (LIMIT 50):

Отправитель: #2 $from_nickname ($from_email)
Тема: Simple 2
Сообщение: Simple letter 2
Дата: 2015-09-10 23:44:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 3
Сообщение: Simple letter 3
Дата: 2015-09-10 23:49:11

Отправитель: #0 $from_nickname ($from_email)
Тема: Simple 4
Сообщение: Simple letter 3
Дата: 2015-09-10 23:50:11

<hr>db custom; sql "SELECT * FROM adeptx_user"<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_user_1_default</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
<hr>db custom; sql "SELECT * FROM adeptx_user" -d<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_user_1_default</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
<hr>db custom; sql "SELECT * FROM adeptx_user" -d<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom;</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
<hr>db custom;hello;get my status;get my id<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>db custom  ;  hello  ;  get my status  ;  get my id<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>db custom;hello;get my status;get my id<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>db custom;hello;get my status;get my id;<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>db custom;hello;get my status;get my id;;;;<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>db custom;hello;get my status;get my id;;;;;;<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>db custom;hello;get my status;get my id  ;;;;;;<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;admin
1=/home/x-positive/srv/adeptx;2=cmd/;1
<hr>   db   custom    ;  ;  ; ;; ;;;   ;;;hello    ;    get   my    id;;;;  get my nickname   ;;; ; ;  <hr>1=/home/x-positive/srv/adeptx;2=cmd/;RU: Комманда "" не существует или её файл (/home/x-positive/srv/adeptx//home/x-positive/srv/adeptx/cmd/.php) переименован, перемещён, недоступен, скрыт настройками приватности или повреждён. Воспользуйтесь командой help чтобы узнать список доступных команд.
EN: Command "" not useful for this site/profile, command-package not install, rename or moved. Use command "help" for access commands list.
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;1
1=/home/x-positive/srv/adeptx;2=cmd/;x-positive
<hr>   db   custom    ;  ;  ; ;; ;;;   ;;;hello    ;    get   my    id;;;;  get my nickname   ;;; ; ;  <hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_custom</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
1=/home/x-positive/srv/adeptx;2=cmd/;Добро пожаловать в Adeptx Driver, x-positive!
1=/home/x-positive/srv/adeptx;2=cmd/;1
1=/home/x-positive/srv/adeptx;2=cmd/;x-positive
<hr>db 1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД сейчас является user_1_custom
<hr>1=/home/x-positive/srv/adeptx;2=cmd/;Текущей БД выбрана база данных <strong style="color:lightgreen">user_1_1=/home/x-positive/srv/adeptx</strong>, узнать текущую БД: <strong><em>pwdb</em></strong>
<hr>